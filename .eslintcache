[{"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/index.js":"1","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/App.js":"2","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/FirebaseConfig.js":"3","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Themes.js":"4","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Loading.js":"5","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/useDarkMode.js":"6","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Globalstyle.js":"7","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Logout.js":"8","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/ErrorMessage.js":"9","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Toggler.js":"10","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/TravelAdvice.js":"11","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Navbar.js":"12","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Login.js":"13","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/UserProfile.js":"14","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Main.js":"15","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Header.js":"16","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/GoogleLogin.js":"17","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignupForm.js":"18","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignInEmail.js":"19","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/FacebookLogin.js":"20","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/geocodeApi.js":"21","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/backendApi.js":"22","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Map.js":"23","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/JourneyDetails.js":"24","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/WhoYouWith.js":"25","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SelectContact.js":"26","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/CrimeApi.js":"27","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/styles/MapNightMode.js":"28","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/emailSender.js":"29"},{"size":417,"mtime":1610035410670,"results":"30","hashOfConfig":"31"},{"size":5933,"mtime":1610197296677,"results":"32","hashOfConfig":"31"},{"size":1092,"mtime":1610114490774,"results":"33","hashOfConfig":"31"},{"size":317,"mtime":1610035403783,"results":"34","hashOfConfig":"31"},{"size":131,"mtime":1610035397060,"results":"35","hashOfConfig":"31"},{"size":657,"mtime":1610035405762,"results":"36","hashOfConfig":"31"},{"size":303,"mtime":1610035394801,"results":"37","hashOfConfig":"31"},{"size":588,"mtime":1610035398559,"results":"38","hashOfConfig":"31"},{"size":167,"mtime":1610035394054,"results":"39","hashOfConfig":"31"},{"size":3131,"mtime":1610035404523,"results":"40","hashOfConfig":"31"},{"size":157,"mtime":1610035405147,"results":"41","hashOfConfig":"31"},{"size":497,"mtime":1610035400641,"results":"42","hashOfConfig":"31"},{"size":5260,"mtime":1610116135569,"results":"43","hashOfConfig":"31"},{"size":7933,"mtime":1610123023393,"results":"44","hashOfConfig":"31"},{"size":7685,"mtime":1610212246850,"results":"45","hashOfConfig":"31"},{"size":372,"mtime":1610197296678,"results":"46","hashOfConfig":"31"},{"size":297,"mtime":1610035395610,"results":"47","hashOfConfig":"31"},{"size":1702,"mtime":1610035403195,"results":"48","hashOfConfig":"31"},{"size":1245,"mtime":1610035402459,"results":"49","hashOfConfig":"31"},{"size":307,"mtime":1610116135568,"results":"50","hashOfConfig":"31"},{"size":1104,"mtime":1610123023394,"results":"51","hashOfConfig":"31"},{"size":707,"mtime":1610128877072,"results":"52","hashOfConfig":"31"},{"size":11963,"mtime":1610197296679,"results":"53","hashOfConfig":"31"},{"size":3858,"mtime":1610197296678,"results":"54","hashOfConfig":"31"},{"size":1655,"mtime":1610197296679,"results":"55","hashOfConfig":"31"},{"size":1422,"mtime":1610204183467,"results":"56","hashOfConfig":"31"},{"size":711,"mtime":1610116161472,"results":"57","hashOfConfig":"31"},{"size":5111,"mtime":1610035390000,"results":"58","hashOfConfig":"31"},{"size":638,"mtime":1610212119511,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"zlqoy5",{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/index.js",[],["127","128"],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/App.js",["129","130","131"],"import { React, useState, useContext, createContext, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { useDarkMode } from './components/useDarkMode'\nimport { GlobalStyles } from './components/Globalstyle'\nimport { lightTheme, darkTheme } from './components/Themes'\nimport Toggle from './components/Toggler'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Loading from './components/Loading'\nimport Logout from './components/Logout'\nimport Main from './components/Main'\nimport UserProfile from './components/UserProfile'\nimport TravelAdvice from './components/TravelAdvice'\nimport { Router, navigate } from '@reach/router'\nimport './components/styles/App.css'\nimport './components/styles/mainContent.css'\nimport './components/styles/header.css'\nimport './components/styles/loading.css'\nimport './components/styles/loginPage.css'\nimport './components/styles/travelAdvice.css'\nimport './components/styles/userProfile.css'\nimport './components/styles/navbar.css'\nimport './components/styles/error.css'\nimport './components/styles/signInEmail.css'\nimport './components/styles/messageContent.css'\nimport './components/styles/Map.css'\nimport { auth, provider } from './FirebaseConfig'\nimport firebase from './FirebaseConfig.js'\nimport Navbar from './components/Navbar'\nimport ErrorMessage from './components/ErrorMessage'\n\nfunction App() {\n    // state stuff\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [userId, setUserId] = useState('')\n    const [userName, setUserName] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [isNewUser, setIsNewUser] = useState(null)\n\n    // componentDidMount to check local storage for logged in state\n    useEffect(() => {\n        const localLoggedIn = localStorage.getItem('loggedIn')\n        if (localLoggedIn === 'true') {\n            setIsLoggedIn(true)\n        }\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setUserId(user.uid)\n            }\n        })\n\n        setIsLoading(false)\n    }, [])\n    console.log(userId, 'user ID in app')\n    // dark mode stuff\n    const [theme, themeToggler, mountedComponent] = useDarkMode()\n    const themeMode = theme === 'light' ? lightTheme : darkTheme\n\n    // method to toggle isLoggedIn in state\n    const setLoggedIn = () => {\n        if (!isLoggedIn) {\n            setIsLoggedIn(true)\n            // set local state\n            localStorage.setItem('loggedIn', 'true')\n        }\n    }\n    // method to set current user id in state\n    const setId = (id) => {\n        setUserId(id)\n    }\n    // method to set current userName in state\n    const setUsername = (username) => {\n        setUserName(username)\n    }\n    //method to logout\n\n    const logout = () => {\n        auth.signOut().then(() => {\n            localStorage.setItem('loggedIn', 'false')\n            setIsLoggedIn(false)\n            navigate('/')\n        })\n    }\n\n    // method to check if current user is new to app\n\n    // console.log(isLoggedIn, '<<isLoggedIn');\n    console.log(theme, 'newTheme')\n    console.log(isNewUser, 'isNewuser')\n    if (!mountedComponent) return <div />\n    return (\n        // dark mode styled components wrapper\n        <ThemeProvider theme={themeMode}>\n            <>\n                <GlobalStyles />\n                {/* check if isLoading */}\n                {isLoading ? (\n                    <Loading />\n                ) : (\n                    <div className='App'>\n                        <div className='headerContainer'>\n                            <Toggle theme={theme} toggleTheme={themeToggler} />\n                            <Header />\n                            {/* render logout button only when user logged in */}\n                            {isLoggedIn && (\n                                <Logout\n                                    theme={theme}\n                                    toggleTheme={themeToggler}\n                                    logout={logout}\n                                />\n                            )}\n                        </div>\n                        {/* check if isLoggedIn */}\n                        {!isLoggedIn ? (\n                            // pass login methods to Login component\n                            <Login\n                                setId={setId}\n                                setLoggedIn={setLoggedIn}\n                                setUsername={setUsername}\n                                setIsNewUser={setIsNewUser}\n                                path='/'\n                            />\n                        ) : (\n                            <>\n                                <Navbar />\n\n                                <Router>\n                                    <Main\n                                        path='/main'\n                                        theme={theme}\n                                        userId={userId}\n                                    />\n                                    <UserProfile\n                                        path='/user-profile'\n                                        userId={userId}\n                                        isNewUser={isNewUser}\n                                        setIsNewUser={setIsNewUser}\n                                        userName={userName}\n                                    />\n                                    <TravelAdvice path='/travel-advice' />\n                                    <ErrorMessage\n                                        msg='Page not found'\n                                        code='404'\n                                        default\n                                    />\n                                </Router>\n                            </>\n                        )}\n                    </div>\n                )}\n            </>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/FirebaseConfig.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Themes.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Loading.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/useDarkMode.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Globalstyle.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Logout.js",["132","133","134"],"import React from 'react'\nimport { auth, provider, firebase } from '../FirebaseConfig.js'\nimport styled from 'styled-components'\n\nconst LogoutButton = styled.button`\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 30px;\n    cursor: pointer;\n    font-size: 0.5rem;\n    justify-content: space-between;\n    justify-self: left;\n    overflow: hidden;\n    padding: 0.5rem;\n\n    width: 4rem;\n    height: 3rem;\n    outline: solid green 2px;\n`\nconst Logout = (props) => {\n    return <LogoutButton onClick={props.logout}>LOGOUT</LogoutButton>\n}\nexport default Logout\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/ErrorMessage.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Toggler.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/TravelAdvice.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Navbar.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Login.js",["135","136","137","138"],"import { navigate } from '@reach/router'\nimport { React, useState, useEffect } from 'react'\nimport { auth, google, facebook } from '../FirebaseConfig'\nimport firebase from '../FirebaseConfig.js'\nimport SignInEmail from './SignInEmail'\nimport GoogleLogin from './GoogleLogin'\nimport SignupForm from './SignupForm'\nimport FacebookLogin from './FacebookLogin'\n\nconst Login = (props) => {\n    //state stuff\n    const [showSignup, setShowSignup] = useState(false)\n    const [loginError, setLoginError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {}, [])\n    // sign in with email method\n    const signInEmail = (email, password) => {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                const newUser = result.additionalUserInfo.isNewUser\n                //use methods on props to change state in App.js\n                props.setIsNewUser(newUser)\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    // google login functionality\n    const googleLogin = () => {\n        auth.signInWithPopup(google)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n    // google login functionality\n    const facebookLogin = () => {\n        console.log('clicked')\n        auth.signInWithPopup(facebook)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                console.log(result)\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    //toggle show signup button\n    const toggleShowSignup = () => {\n        if (showSignup) {\n            setShowSignup(false)\n        } else {\n            setShowSignup(true)\n        }\n    }\n    // sign up login method\n    const handleSignUp = (username, email, password) => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                console.log(user)\n                const { uid } = firebase.auth().currentUser\n                const userInfo = firebase.auth().currentUser\n                const newUser = user.additionalUserInfo.isNewUser\n                userInfo.updateProfile({\n                    displayName: username,\n                })\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(username)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    return (\n        <div className='loginPage'>\n            <h2 className='loginpageTitle'>LOGIN PAGE</h2>\n\n            {loginError && <div className='loginError'>{errorMessage}</div>}\n\n            <SignInEmail signInEmail={signInEmail} />\n\n            <GoogleLogin googleLogin={googleLogin} />\n\n            <FacebookLogin facebookLogin={facebookLogin} />\n\n            <div className='signupButtonContainer'>\n                <button\n                    className='toggleSignupButton'\n                    onClick={toggleShowSignup}\n                >\n                    {showSignup ? 'hide signup' : 'show signup'}\n                </button>\n            </div>\n\n            {showSignup && <SignupForm handleSignUp={handleSignUp} />}\n        </div>\n    )\n}\n\nexport default Login\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/UserProfile.js",["139","140","141"],"import { React, useState, useEffect, useContext } from 'react'\nimport { getUserByUid, getUsers, postNewUser } from './backendApi'\nimport Loading from './Loading'\n\nfunction UserProfile(props) {\n    // const [firebaseUid, setFirebaseUid] = useState('')\n    // const [users, setUsers] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n    //const [isNewUser, setIsNewUser] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [userName, setUserName] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const [houseNumber, setHouseNumber] = useState('')\n    const [streetName, setStreetName] = useState('')\n    const [postCode, setPostCode] = useState('')\n    const [city, setCity] = useState('')\n    const [userData, setUserData] = useState({})\n\n    // set state\n    useEffect(() => {\n        // setFirebaseUid(props.userId)\n        console.log(props.userId)\n        setIsLoading(false)\n        if (!userData && !props.isNewUser) {\n            console.log(props.userId)\n            getUserByUid(props.userId).then((user) => {\n                setUserData(user)\n            })\n        }\n        // const localUser = localStorage.getItem('localUserData')\n        // if (localUser) {\n        //     setUserData('newUser')\n        // }\n        // setIsNewUser(props.isNewUser)\n    }, [userData])\n\n    // console.log(firebaseUid, 'UID')\n\n    const handleNewUserSubmit = (event) => {\n        console.log('hello')\n        event.preventDefault()\n        const newUser = {\n            first_name: firstName,\n            last_name: lastName,\n            username: userName,\n            phone_number: phoneNumber,\n            house_number: +houseNumber,\n            street_name: streetName,\n            postcode: postCode,\n            city: city,\n            uid: props.userId,\n        }\n        postNewUser(newUser).then((newUser) => {\n            setUserData(newUser)\n            props.setIsNewUser(false)\n        })\n        // localStorage.setItem('localUserData', 'userData')\n    }\n\n    return (\n        <div className='userProfileContent'>\n            {isLoading ? (\n                <Loading />\n            ) : props.isNewUser ? (\n                <>\n                    <h2>New User Profile</h2>\n                    <form\n                        onSubmit={handleNewUserSubmit}\n                        className='newUserForm'\n                    >\n                        <label>\n                            First Name:\n                            <input\n                                name='firstName'\n                                type='text'\n                                placeholder='First Name'\n                                required\n                                value={firstName}\n                                onChange={(event) =>\n                                    setFirstName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Last Name:\n                            <input\n                                name='lastName'\n                                type='text'\n                                placeholder='Last Name'\n                                required\n                                value={lastName}\n                                onChange={(event) =>\n                                    setLastName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Username:\n                            <input\n                                placeholder='Username'\n                                required\n                                value={userName}\n                                onChange={(event) =>\n                                    setUserName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Phone Number:\n                            <input\n                                name='phoneNumber'\n                                type='text'\n                                placeholder='Phone Number'\n                                required\n                                value={phoneNumber}\n                                onChange={(event) =>\n                                    setPhoneNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            House Number:\n                            <input\n                                name='houseNumber'\n                                type='number'\n                                placeholder='House Number'\n                                required\n                                value={houseNumber}\n                                onChange={(event) =>\n                                    setHouseNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Street Name:\n                            <input\n                                name='streetName'\n                                type='text'\n                                placeholder='Street Name'\n                                required\n                                value={streetName}\n                                onChange={(event) =>\n                                    setStreetName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Post Code:\n                            <input\n                                name='postCode'\n                                type='text'\n                                placeholder='Post Code'\n                                required\n                                value={postCode}\n                                onChange={(event) =>\n                                    setPostCode(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            City:\n                            <input\n                                name='city'\n                                type='text'\n                                placeholder='City'\n                                required\n                                value={city}\n                                onChange={(event) =>\n                                    setCity(event.target.value)\n                                }\n                            />\n                        </label>\n                        <button type='submit'>Create Account</button>\n                    </form>\n                </>\n            ) : (\n                <>\n                    <h2>User Profile</h2>\n                    {!userData ? (\n                        <Loading />\n                    ) : (\n                        <div>\n                            <p>First Name: {userData.user.first_name}</p>\n                            <p>Last Name: {userData.user.last_name}</p>\n                            <p>User Name: {userData.user.username}</p>\n                            <p>Phone Number: {userData.user.phone_number}</p>\n                            <p>House Number: {userData.user.house_number}</p>\n                            <p>Street Name: {userData.user.street_name}</p>\n                            <p>Post Code: {userData.user.postcode}</p>\n                            <p>City: {userData.user.city}</p>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default UserProfile\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Main.js",["142","143","144","145"],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Header.js",["146"],"import React from 'react'\nimport Toggle from './Toggler'\nimport HomeIconSphere from '../icons/HomeIconSphere.png'\n\nconst Header = (props) => {\n    return (\n        <div className='headerDiv'>\n            <img src={HomeIconSphere} className='HomeIcon' alt='icon'></img>\n            <h1 className='headerContent'>Safe Home</h1>\n        </div>\n    )\n}\n\nexport default Header\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/GoogleLogin.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignupForm.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignInEmail.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/FacebookLogin.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/geocodeApi.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/backendApi.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Map.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/JourneyDetails.js",["147","148"],"import { React, useState, useEffect } from 'react'\n\nfunction JourneyDetails(props) {\n    const {\n        setTravelMode,\n        travelMode,\n        setTaxiReg,\n        taxiReg,\n        setBusService,\n        busService,\n        setTrainService,\n        trainService,\n        setTravelCompanion,\n        travelCompanion,\n        setOther,\n        other,\n    } = props\n\n    return (\n        <div className='journeyContent'>\n            <label>\n                Select Travel Mode\n                <select\n                    name='cars'\n                    id='cars'\n                    onChange={(event) => {\n                        setTravelMode(event.target.value)\n                    }}\n                >\n                    <option value='walking'>walking</option>\n                    <option value='taxi'>taxi</option>\n                    <option value='train'>train</option>\n                    <option value='bus'>bus</option>\n                    <option value='other'>other</option>\n                </select>\n            </label>\n\n            <form className='newUserForm'>\n                {travelMode === 'taxi' && (\n                    <label>\n                        Taxi Reg:\n                        <input\n                            name='taxiReg'\n                            type='text'\n                            placeholder='Taxi Reg'\n                            required\n                            value={taxiReg}\n                            onChange={(event) => setTaxiReg(event.target.value)}\n                        />\n                    </label>\n                )}\n                {travelMode === 'bus' && (\n                    <label>\n                        Bus Service:\n                        <input\n                            name='busService'\n                            type='text'\n                            placeholder='Bus Service'\n                            required\n                            value={busService}\n                            onChange={(event) =>\n                                setBusService(event.target.value)\n                            }\n                        />\n                    </label>\n                )}\n\n                {travelMode === 'train' && (\n                    <label>\n                        Train Service:\n                        <input\n                            name='trainService'\n                            type='text'\n                            placeholder='Train Service'\n                            required\n                            value={trainService}\n                            onChange={(event) =>\n                                setTrainService(event.target.value)\n                            }\n                        />\n                    </label>\n                )}\n                {travelMode === 'other' && (\n                    <label>\n                        Other Transport:\n                        <input\n                            name='other'\n                            type='text'\n                            placeholder='please give details'\n                            required\n                            value={other}\n                            onChange={(event) => setOther(event.target.value)}\n                        />\n                    </label>\n                )}\n\n                <label>\n                    Travel Companion?:\n                    <input\n                        name='travelCompanion'\n                        type='text'\n                        placeholder='Travel Companion?'\n                        required\n                        value={travelCompanion}\n                        onChange={(event) =>\n                            setTravelCompanion(event.target.value)\n                        }\n                    />\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default JourneyDetails\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/WhoYouWith.js",["149"],"import { React, useState } from 'react'\n\nfunction WhoYouWith(props) {\n    const {\n        savePersonOne,\n        personOne,\n        savePersonTwo,\n        personTwo,\n        savePersonThree,\n        personThree,\n    } = props\n\n    return (\n        <div className='whoYouWithContent'>\n            <p className='whoYouWithTitle'>Who You With? </p>\n\n            <form className='whoYouWithForm'>\n                <label>\n                    person 1 :\n                    <input\n                        name='personOne'\n                        type='text'\n                        placeholder='personOne'\n                        value={personOne}\n                        onChange={(event) => savePersonOne(event.target.value)}\n                    />\n                </label>\n                <label>\n                    person 2 :\n                    <input\n                        name='personTwo'\n                        type='text'\n                        placeholder='personTwo'\n                        value={personTwo}\n                        onChange={(event) => savePersonTwo(event.target.value)}\n                    />\n                </label>\n                <label>\n                    person 3 :\n                    <input\n                        name='personThree'\n                        type='text'\n                        placeholder='personThree'\n                        value={personThree}\n                        onChange={(event) =>\n                            savePersonThree(event.target.value)\n                        }\n                    />\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default WhoYouWith\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SelectContact.js",["150"],"import { React, useState, useEffect } from 'react'\nimport { getContactsByUid } from './backendApi'\n\nfunction SelectContact(props) {\n    const [contacts, setContacts] = useState([])\n    const [apiCalled, setApiCalled] = useState(false)\n    const { saveContact } = props\n\n    useEffect(() => {\n        if (!apiCalled) {\n            fetchAllContacts()\n        }\n    }, [])\n\n    // uid is hard coded\n    const fetchAllContacts = () => {\n        getContactsByUid('ouq2Vs5hq4afIZiEBV0wIUb8Fk03').then((response) => {\n            setContacts(response.contacts)\n            setApiCalled(true)\n        })\n    }\n\n    return (\n        <div>\n            <label>\n                Select Emergency Contact\n                <select\n                    name='cars'\n                    id='cars'\n                    onChange={(event) => {\n                        saveContact(event.target.value)\n                    }}\n                >\n                    {contacts.map((contact) => {\n                        return (\n                            <option\n                                value={contact.first_name}\n                                key={contact.first_name}\n                            >\n                                {contact.first_name}\n                            </option>\n                        )\n                    })}\n                </select>\n            </label>\n        </div>\n    )\n}\n\nexport default SelectContact\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/CrimeApi.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/styles/MapNightMode.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/emailSender.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":37},{"ruleId":"155","severity":1,"message":"159","line":1,"column":39,"nodeType":"157","messageId":"158","endLine":1,"endColumn":52},{"ruleId":"155","severity":1,"message":"160","line":27,"column":16,"nodeType":"157","messageId":"158","endLine":27,"endColumn":24},{"ruleId":"155","severity":1,"message":"161","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"160","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":24},{"ruleId":"155","severity":1,"message":"162","line":2,"column":26,"nodeType":"157","messageId":"158","endLine":2,"endColumn":34},{"ruleId":"155","severity":1,"message":"163","line":35,"column":23,"nodeType":"157","messageId":"158","endLine":35,"endColumn":32},{"ruleId":"155","severity":1,"message":"163","line":58,"column":23,"nodeType":"157","messageId":"158","endLine":58,"endColumn":32},{"ruleId":"155","severity":1,"message":"163","line":82,"column":23,"nodeType":"157","messageId":"158","endLine":82,"endColumn":32},{"ruleId":"155","severity":1,"message":"163","line":117,"column":23,"nodeType":"157","messageId":"158","endLine":117,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":48},{"ruleId":"155","severity":1,"message":"164","line":2,"column":24,"nodeType":"157","messageId":"158","endLine":2,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":36,"column":8,"nodeType":"167","endLine":36,"endColumn":18,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"169","line":17,"column":12,"nodeType":"157","messageId":"158","endLine":17,"endColumn":18},{"ruleId":"155","severity":1,"message":"170","line":30,"column":12,"nodeType":"157","messageId":"158","endLine":30,"endColumn":27},{"ruleId":"165","severity":1,"message":"171","line":40,"column":8,"nodeType":"167","endLine":40,"endColumn":10,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":131,"column":50,"nodeType":"175","messageId":"176","endLine":131,"endColumn":52},{"ruleId":"155","severity":1,"message":"177","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"178","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"179","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"178","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"180","line":13,"column":8,"nodeType":"167","endLine":13,"endColumn":10,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'provider' is defined but never used.","'auth' is defined but never used.","'firebase' is defined but never used.","'errorCode' is assigned a value but never used.","'getUsers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.isNewUser' and 'props.userId'. Either include them or remove the dependency array.","ArrayExpression",["184"],"'userId' is assigned a value but never used.","'selectedContact' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array. If 'setUserId' needs the current value of 'props.userId', you can also switch to useReducer instead of useState and read 'props.userId' in the reducer.",["185"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Toggle' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'apiCalled'. Either include it or remove the dependency array.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [props.isNewUser, props.userId, userData]",{"range":"193","text":"194"},"Update the dependencies array to be: [props.userId]",{"range":"195","text":"196"},"Update the dependencies array to be: [apiCalled]",{"range":"197","text":"198"},[1391,1401],"[props.isNewUser, props.userId, userData]",[1528,1530],"[props.userId]",[366,368],"[apiCalled]"]