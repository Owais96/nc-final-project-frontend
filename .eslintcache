[{"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/index.js":"1","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/App.js":"2","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/FirebaseConfig.js":"3","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/useDarkMode.js":"4","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Globalstyle.js":"5","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Themes.js":"6","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Header.js":"7","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Toggler.js":"8","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Logout.js":"9","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Loading.js":"10","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/TravelAdvice.js":"11","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Navbar.js":"12","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/ErrorMessage.js":"13","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Main.js":"14","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Login.js":"15","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/UserProfile.js":"16","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignInEmail.js":"17","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/GoogleLogin.js":"18","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignupForm.js":"19","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/JourneyDetails.js":"20","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Map.js":"21","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/geocodeApi.js":"22","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/WhoYouWith.js":"23","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SelectContact.js":"24","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/FacebookLogin.js":"25","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/backendApi.js":"26","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/CrimeApi.js":"27","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/styles/MapNightMode.js":"28"},{"size":417,"mtime":1610099923836,"results":"29","hashOfConfig":"30"},{"size":5933,"mtime":1610180639077,"results":"31","hashOfConfig":"30"},{"size":1092,"mtime":1610126283131,"results":"32","hashOfConfig":"30"},{"size":657,"mtime":1610099923836,"results":"33","hashOfConfig":"30"},{"size":303,"mtime":1610099923829,"results":"34","hashOfConfig":"30"},{"size":317,"mtime":1610099923832,"results":"35","hashOfConfig":"30"},{"size":164,"mtime":1610099923830,"results":"36","hashOfConfig":"30"},{"size":3131,"mtime":1610099923832,"results":"37","hashOfConfig":"30"},{"size":588,"mtime":1610099923831,"results":"38","hashOfConfig":"30"},{"size":131,"mtime":1610099923830,"results":"39","hashOfConfig":"30"},{"size":157,"mtime":1610099923833,"results":"40","hashOfConfig":"30"},{"size":497,"mtime":1610099923831,"results":"41","hashOfConfig":"30"},{"size":167,"mtime":1610099923829,"results":"42","hashOfConfig":"30"},{"size":6803,"mtime":1610180181282,"results":"43","hashOfConfig":"30"},{"size":5260,"mtime":1610125874253,"results":"44","hashOfConfig":"30"},{"size":7933,"mtime":1610125874257,"results":"45","hashOfConfig":"30"},{"size":1245,"mtime":1610099923832,"results":"46","hashOfConfig":"30"},{"size":297,"mtime":1610099923829,"results":"47","hashOfConfig":"30"},{"size":1702,"mtime":1610099923832,"results":"48","hashOfConfig":"30"},{"size":3858,"mtime":1610178201863,"results":"49","hashOfConfig":"30"},{"size":11891,"mtime":1610180888965,"results":"50","hashOfConfig":"30"},{"size":1104,"mtime":1610125874263,"results":"51","hashOfConfig":"30"},{"size":1655,"mtime":1610174595377,"results":"52","hashOfConfig":"30"},{"size":1304,"mtime":1610174293019,"results":"53","hashOfConfig":"30"},{"size":307,"mtime":1610125874251,"results":"54","hashOfConfig":"30"},{"size":707,"mtime":1610128844762,"results":"55","hashOfConfig":"30"},{"size":711,"mtime":1610110070780,"results":"56","hashOfConfig":"30"},{"size":5111,"mtime":1610099923834,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1yx8qv1",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/index.js",[],["122","123"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/App.js",["124","125","126"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/FirebaseConfig.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/useDarkMode.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Globalstyle.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Themes.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Header.js",["127"],"import React from 'react'\nimport Toggle from './Toggler'\n\nconst Header = (props) => {\n    return <h1 className=\"headerContent\">Header</h1>\n}\n\nexport default Header\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Toggler.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Logout.js",["128","129","130"],"import React from 'react'\nimport { auth, provider, firebase } from '../FirebaseConfig.js'\nimport styled from 'styled-components'\n\nconst LogoutButton = styled.button`\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 30px;\n    cursor: pointer;\n    font-size: 0.5rem;\n    justify-content: space-between;\n    justify-self: left;\n    overflow: hidden;\n    padding: 0.5rem;\n\n    width: 4rem;\n    height: 3rem;\n    outline: solid green 2px;\n`\nconst Logout = (props) => {\n    return <LogoutButton onClick={props.logout}>LOGOUT</LogoutButton>\n}\nexport default Logout\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Loading.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/TravelAdvice.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Navbar.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/ErrorMessage.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Main.js",["131","132","133"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Login.js",["134","135","136","137"],"import { navigate } from '@reach/router'\nimport { React, useState, useEffect } from 'react'\nimport { auth, google, facebook } from '../FirebaseConfig'\nimport firebase from '../FirebaseConfig.js'\nimport SignInEmail from './SignInEmail'\nimport GoogleLogin from './GoogleLogin'\nimport SignupForm from './SignupForm'\nimport FacebookLogin from './FacebookLogin'\n\nconst Login = (props) => {\n    //state stuff\n    const [showSignup, setShowSignup] = useState(false)\n    const [loginError, setLoginError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {}, [])\n    // sign in with email method\n    const signInEmail = (email, password) => {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                const newUser = result.additionalUserInfo.isNewUser\n                //use methods on props to change state in App.js\n                props.setIsNewUser(newUser)\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    // google login functionality\n    const googleLogin = () => {\n        auth.signInWithPopup(google)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n    // google login functionality\n    const facebookLogin = () => {\n        console.log('clicked')\n        auth.signInWithPopup(facebook)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                console.log(result)\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    //toggle show signup button\n    const toggleShowSignup = () => {\n        if (showSignup) {\n            setShowSignup(false)\n        } else {\n            setShowSignup(true)\n        }\n    }\n    // sign up login method\n    const handleSignUp = (username, email, password) => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                console.log(user)\n                const { uid } = firebase.auth().currentUser\n                const userInfo = firebase.auth().currentUser\n                const newUser = user.additionalUserInfo.isNewUser\n                userInfo.updateProfile({\n                    displayName: username,\n                })\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(username)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    return (\n        <div className='loginPage'>\n            <h2 className='loginpageTitle'>LOGIN PAGE</h2>\n\n            {loginError && <div className='loginError'>{errorMessage}</div>}\n\n            <SignInEmail signInEmail={signInEmail} />\n\n            <GoogleLogin googleLogin={googleLogin} />\n\n            <FacebookLogin facebookLogin={facebookLogin} />\n\n            <div className='signupButtonContainer'>\n                <button\n                    className='toggleSignupButton'\n                    onClick={toggleShowSignup}\n                >\n                    {showSignup ? 'hide signup' : 'show signup'}\n                </button>\n            </div>\n\n            {showSignup && <SignupForm handleSignUp={handleSignUp} />}\n        </div>\n    )\n}\n\nexport default Login\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/UserProfile.js",["138","139","140"],"import { React, useState, useEffect, useContext } from 'react'\nimport { getUserByUid, getUsers, postNewUser } from './backendApi'\nimport Loading from './Loading'\n\nfunction UserProfile(props) {\n    // const [firebaseUid, setFirebaseUid] = useState('')\n    // const [users, setUsers] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n    //const [isNewUser, setIsNewUser] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [userName, setUserName] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const [houseNumber, setHouseNumber] = useState('')\n    const [streetName, setStreetName] = useState('')\n    const [postCode, setPostCode] = useState('')\n    const [city, setCity] = useState('')\n    const [userData, setUserData] = useState({})\n\n    // set state\n    useEffect(() => {\n        // setFirebaseUid(props.userId)\n        console.log(props.userId)\n        setIsLoading(false)\n        if (!userData && !props.isNewUser) {\n            console.log(props.userId)\n            getUserByUid(props.userId).then((user) => {\n                setUserData(user)\n            })\n        }\n        // const localUser = localStorage.getItem('localUserData')\n        // if (localUser) {\n        //     setUserData('newUser')\n        // }\n        // setIsNewUser(props.isNewUser)\n    }, [userData])\n\n    // console.log(firebaseUid, 'UID')\n\n    const handleNewUserSubmit = (event) => {\n        console.log('hello')\n        event.preventDefault()\n        const newUser = {\n            first_name: firstName,\n            last_name: lastName,\n            username: userName,\n            phone_number: phoneNumber,\n            house_number: +houseNumber,\n            street_name: streetName,\n            postcode: postCode,\n            city: city,\n            uid: props.userId,\n        }\n        postNewUser(newUser).then((newUser) => {\n            setUserData(newUser)\n            props.setIsNewUser(false)\n        })\n        // localStorage.setItem('localUserData', 'userData')\n    }\n\n    return (\n        <div className='userProfileContent'>\n            {isLoading ? (\n                <Loading />\n            ) : props.isNewUser ? (\n                <>\n                    <h2>New User Profile</h2>\n                    <form\n                        onSubmit={handleNewUserSubmit}\n                        className='newUserForm'\n                    >\n                        <label>\n                            First Name:\n                            <input\n                                name='firstName'\n                                type='text'\n                                placeholder='First Name'\n                                required\n                                value={firstName}\n                                onChange={(event) =>\n                                    setFirstName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Last Name:\n                            <input\n                                name='lastName'\n                                type='text'\n                                placeholder='Last Name'\n                                required\n                                value={lastName}\n                                onChange={(event) =>\n                                    setLastName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Username:\n                            <input\n                                placeholder='Username'\n                                required\n                                value={userName}\n                                onChange={(event) =>\n                                    setUserName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Phone Number:\n                            <input\n                                name='phoneNumber'\n                                type='text'\n                                placeholder='Phone Number'\n                                required\n                                value={phoneNumber}\n                                onChange={(event) =>\n                                    setPhoneNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            House Number:\n                            <input\n                                name='houseNumber'\n                                type='number'\n                                placeholder='House Number'\n                                required\n                                value={houseNumber}\n                                onChange={(event) =>\n                                    setHouseNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Street Name:\n                            <input\n                                name='streetName'\n                                type='text'\n                                placeholder='Street Name'\n                                required\n                                value={streetName}\n                                onChange={(event) =>\n                                    setStreetName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Post Code:\n                            <input\n                                name='postCode'\n                                type='text'\n                                placeholder='Post Code'\n                                required\n                                value={postCode}\n                                onChange={(event) =>\n                                    setPostCode(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            City:\n                            <input\n                                name='city'\n                                type='text'\n                                placeholder='City'\n                                required\n                                value={city}\n                                onChange={(event) =>\n                                    setCity(event.target.value)\n                                }\n                            />\n                        </label>\n                        <button type='submit'>Create Account</button>\n                    </form>\n                </>\n            ) : (\n                <>\n                    <h2>User Profile</h2>\n                    {!userData ? (\n                        <Loading />\n                    ) : (\n                        <div>\n                            <p>First Name: {userData.user.first_name}</p>\n                            <p>Last Name: {userData.user.last_name}</p>\n                            <p>User Name: {userData.user.username}</p>\n                            <p>Phone Number: {userData.user.phone_number}</p>\n                            <p>House Number: {userData.user.house_number}</p>\n                            <p>Street Name: {userData.user.street_name}</p>\n                            <p>Post Code: {userData.user.postcode}</p>\n                            <p>City: {userData.user.city}</p>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default UserProfile\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignInEmail.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/GoogleLogin.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignupForm.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/JourneyDetails.js",["141","142"],"import { React, useState, useEffect } from 'react'\n\nfunction JourneyDetails(props) {\n    const {\n        setTravelMode,\n        travelMode,\n        setTaxiReg,\n        taxiReg,\n        setBusService,\n        busService,\n        setTrainService,\n        trainService,\n        setTravelCompanion,\n        travelCompanion,\n        setOther,\n        other,\n    } = props\n\n    return (\n        <div className='journeyContent'>\n            <label>\n                Select Travel Mode\n                <select\n                    name='cars'\n                    id='cars'\n                    onChange={(event) => {\n                        setTravelMode(event.target.value)\n                    }}\n                >\n                    <option value='walking'>walking</option>\n                    <option value='taxi'>taxi</option>\n                    <option value='train'>train</option>\n                    <option value='bus'>bus</option>\n                    <option value='other'>other</option>\n                </select>\n            </label>\n\n            <form className='newUserForm'>\n                {travelMode === 'taxi' && (\n                    <label>\n                        Taxi Reg:\n                        <input\n                            name='taxiReg'\n                            type='text'\n                            placeholder='Taxi Reg'\n                            required\n                            value={taxiReg}\n                            onChange={(event) => setTaxiReg(event.target.value)}\n                        />\n                    </label>\n                )}\n                {travelMode === 'bus' && (\n                    <label>\n                        Bus Service:\n                        <input\n                            name='busService'\n                            type='text'\n                            placeholder='Bus Service'\n                            required\n                            value={busService}\n                            onChange={(event) =>\n                                setBusService(event.target.value)\n                            }\n                        />\n                    </label>\n                )}\n\n                {travelMode === 'train' && (\n                    <label>\n                        Train Service:\n                        <input\n                            name='trainService'\n                            type='text'\n                            placeholder='Train Service'\n                            required\n                            value={trainService}\n                            onChange={(event) =>\n                                setTrainService(event.target.value)\n                            }\n                        />\n                    </label>\n                )}\n                {travelMode === 'other' && (\n                    <label>\n                        Other Transport:\n                        <input\n                            name='other'\n                            type='text'\n                            placeholder='please give details'\n                            required\n                            value={other}\n                            onChange={(event) => setOther(event.target.value)}\n                        />\n                    </label>\n                )}\n\n                <label>\n                    Travel Companion?:\n                    <input\n                        name='travelCompanion'\n                        type='text'\n                        placeholder='Travel Companion?'\n                        required\n                        value={travelCompanion}\n                        onChange={(event) =>\n                            setTravelCompanion(event.target.value)\n                        }\n                    />\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default JourneyDetails\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Map.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/geocodeApi.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/WhoYouWith.js",["143"],"import { React, useState } from 'react'\n\nfunction WhoYouWith(props) {\n    const {\n        savePersonOne,\n        personOne,\n        savePersonTwo,\n        personTwo,\n        savePersonThree,\n        personThree,\n    } = props\n\n    return (\n        <div className='whoYouWithContent'>\n            <p className='whoYouWithTitle'>Who You With? </p>\n\n            <form className='whoYouWithForm'>\n                <label>\n                    person 1 :\n                    <input\n                        name='personOne'\n                        type='text'\n                        placeholder='personOne'\n                        value={personOne}\n                        onChange={(event) => savePersonOne(event.target.value)}\n                    />\n                </label>\n                <label>\n                    person 2 :\n                    <input\n                        name='personTwo'\n                        type='text'\n                        placeholder='personTwo'\n                        value={personTwo}\n                        onChange={(event) => savePersonTwo(event.target.value)}\n                    />\n                </label>\n                <label>\n                    person 3 :\n                    <input\n                        name='personThree'\n                        type='text'\n                        placeholder='personThree'\n                        value={personThree}\n                        onChange={(event) =>\n                            savePersonThree(event.target.value)\n                        }\n                    />\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default WhoYouWith\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SelectContact.js",["144"],"import { React, useState, useEffect } from 'react'\nimport { getContactsByUid } from './backendApi'\n\nfunction SelectContact(props) {\n    const [contacts, setContacts] = useState([])\n    const [apiCalled, setApiCalled] = useState(false)\n    const { saveContact } = props\n\n    useEffect(() => {\n        if (!apiCalled) {\n            fetchAllContacts()\n        }\n    }, [])\n\n    // uid is hard coded\n    const fetchAllContacts = () => {\n        getContactsByUid('ouq2Vs5hq4afIZiEBV0wIUb8Fk03').then((response) => {\n            setContacts(response.contacts)\n            setApiCalled(true)\n        })\n    }\n\n    return (\n        <div>\n            <label>\n                Select Emergency Contact\n                <select\n                    name='cars'\n                    id='cars'\n                    onChange={(event) => {\n                        saveContact(event.target.value)\n                    }}\n                >\n                    {contacts.map((contact) => {\n                        return (\n                            <option value={contact.first_name}>\n                                {contact.first_name}\n                            </option>\n                        )\n                    })}\n                </select>\n            </label>\n        </div>\n    )\n}\n\nexport default SelectContact\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/FacebookLogin.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/backendApi.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/CrimeApi.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/styles/MapNightMode.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":37},{"ruleId":"149","severity":1,"message":"153","line":1,"column":39,"nodeType":"151","messageId":"152","endLine":1,"endColumn":52},{"ruleId":"149","severity":1,"message":"154","line":27,"column":16,"nodeType":"151","messageId":"152","endLine":27,"endColumn":24},{"ruleId":"149","severity":1,"message":"155","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":14},{"ruleId":"149","severity":1,"message":"156","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":14},{"ruleId":"149","severity":1,"message":"154","line":2,"column":16,"nodeType":"151","messageId":"152","endLine":2,"endColumn":24},{"ruleId":"149","severity":1,"message":"157","line":2,"column":26,"nodeType":"151","messageId":"152","endLine":2,"endColumn":34},{"ruleId":"149","severity":1,"message":"158","line":14,"column":12,"nodeType":"151","messageId":"152","endLine":14,"endColumn":18},{"ruleId":"149","severity":1,"message":"159","line":27,"column":12,"nodeType":"151","messageId":"152","endLine":27,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":37,"column":8,"nodeType":"162","endLine":37,"endColumn":10,"suggestions":"163"},{"ruleId":"149","severity":1,"message":"164","line":35,"column":23,"nodeType":"151","messageId":"152","endLine":35,"endColumn":32},{"ruleId":"149","severity":1,"message":"164","line":58,"column":23,"nodeType":"151","messageId":"152","endLine":58,"endColumn":32},{"ruleId":"149","severity":1,"message":"164","line":82,"column":23,"nodeType":"151","messageId":"152","endLine":82,"endColumn":32},{"ruleId":"149","severity":1,"message":"164","line":117,"column":23,"nodeType":"151","messageId":"152","endLine":117,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":1,"column":38,"nodeType":"151","messageId":"152","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"165","line":2,"column":24,"nodeType":"151","messageId":"152","endLine":2,"endColumn":32},{"ruleId":"160","severity":1,"message":"166","line":36,"column":8,"nodeType":"162","endLine":36,"endColumn":18,"suggestions":"167"},{"ruleId":"149","severity":1,"message":"168","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"169","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"168","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"170","line":13,"column":8,"nodeType":"162","endLine":13,"endColumn":10,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'provider' is defined but never used.","'Toggle' is defined but never used.","'auth' is defined but never used.","'firebase' is defined but never used.","'userId' is assigned a value but never used.","'selectedContact' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array. If 'setUserId' needs the current value of 'props.userId', you can also switch to useReducer instead of useState and read 'props.userId' in the reducer.","ArrayExpression",["174"],"'errorCode' is assigned a value but never used.","'getUsers' is defined but never used.","React Hook useEffect has missing dependencies: 'props.isNewUser' and 'props.userId'. Either include them or remove the dependency array.",["175"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'apiCalled'. Either include it or remove the dependency array.",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [props.userId]",{"range":"183","text":"184"},"Update the dependencies array to be: [props.isNewUser, props.userId, userData]",{"range":"185","text":"186"},"Update the dependencies array to be: [apiCalled]",{"range":"187","text":"188"},[1458,1460],"[props.userId]",[1391,1401],"[props.isNewUser, props.userId, userData]",[366,368],"[apiCalled]"]