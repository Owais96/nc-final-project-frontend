
[{"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/index.js":"1","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/App.js":"2","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/FirebaseConfig.js":"3","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Globalstyle.js":"4","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Toggler.js":"5","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/useDarkMode.js":"6","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Themes.js":"7","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Header.js":"8","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Loading.js":"9","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Logout.js":"10","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Login.js":"11","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/ErrorMessage.js":"12","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/UserProfile.js":"13","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Navbar.js":"14","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/TravelAdvice.js":"15","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Main.js":"16","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/backendApi.js":"17","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/SignupForm.js":"18","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/GoogleLogin.js":"19","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/SignInEmail.js":"20","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/FacebookLogin.js":"21","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/UserContacts.js":"22","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/WhoYouWith.js":"23","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/JourneyDetails.js":"24","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Map.js":"25","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/SelectContact.js":"26","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/geocodeApi.js":"27","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Switch.js":"28","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/styles/MapNightMode.js":"29","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/CrimeApi.js":"30"},{"size":417,"mtime":1610036019872,"results":"31","hashOfConfig":"32"},{"size":6097,"mtime":1610287850956,"results":"33","hashOfConfig":"32"},{"size":1092,"mtime":1610123790053,"results":"34","hashOfConfig":"32"},{"size":525,"mtime":1610358174636,"results":"35","hashOfConfig":"32"},{"size":3101,"mtime":1610287850959,"results":"36","hashOfConfig":"32"},{"size":657,"mtime":1610036019871,"results":"37","hashOfConfig":"32"},{"size":543,"mtime":1610358174640,"results":"38","hashOfConfig":"32"},{"size":339,"mtime":1610287850957,"results":"39","hashOfConfig":"32"},{"size":131,"mtime":1610036019000,"results":"40","hashOfConfig":"32"},{"size":557,"mtime":1610358174637,"results":"41","hashOfConfig":"32"},{"size":5833,"mtime":1610370162284,"results":"42","hashOfConfig":"32"},{"size":167,"mtime":1610036019854,"results":"43","hashOfConfig":"32"},{"size":9095,"mtime":1610370162291,"results":"44","hashOfConfig":"32"},{"size":1192,"mtime":1610358174638,"results":"45","hashOfConfig":"32"},{"size":214,"mtime":1610370162289,"results":"46","hashOfConfig":"32"},{"size":12320,"mtime":1610383187196,"results":"47","hashOfConfig":"32"},{"size":726,"mtime":1610358174640,"results":"48","hashOfConfig":"32"},{"size":1702,"mtime":1610036019857,"results":"49","hashOfConfig":"32"},{"size":297,"mtime":1610036019855,"results":"50","hashOfConfig":"32"},{"size":1245,"mtime":1610036019857,"results":"51","hashOfConfig":"32"},{"size":307,"mtime":1610125261336,"results":"52","hashOfConfig":"32"},{"size":3121,"mtime":1610370162289,"results":"53","hashOfConfig":"32"},{"size":2200,"mtime":1610358174640,"results":"54","hashOfConfig":"32"},{"size":7371,"mtime":1610377660705,"results":"55","hashOfConfig":"32"},{"size":15598,"mtime":1610383472940,"results":"56","hashOfConfig":"32"},{"size":1946,"mtime":1610380552607,"results":"57","hashOfConfig":"32"},{"size":865,"mtime":1610377660711,"results":"58","hashOfConfig":"32"},{"size":1519,"mtime":1610358174639,"results":"59","hashOfConfig":"32"},{"size":5111,"mtime":1610036019865,"results":"60","hashOfConfig":"32"},{"size":711,"mtime":1610122909991,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"beyn3n",{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/index.js",[],["131","132"],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/App.js",["133","134","135"],"import { React, useState, useContext, createContext, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { useDarkMode } from './components/useDarkMode'\nimport { GlobalStyles } from './components/Globalstyle'\nimport { lightTheme, darkTheme } from './components/Themes'\nimport Toggle from './components/Toggler'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Loading from './components/Loading'\nimport Logout from './components/Logout'\nimport Main from './components/Main'\nimport UserProfile from './components/UserProfile'\nimport TravelAdvice from './components/TravelAdvice'\nimport { Router, navigate } from '@reach/router'\nimport './components/styles/App.css'\nimport './components/styles/mainContent.css'\nimport './components/styles/header.css'\nimport './components/styles/loading.css'\nimport './components/styles/loginPage.css'\nimport './components/styles/travelAdvice.css'\nimport './components/styles/userProfile.css'\nimport './components/styles/navbar.css'\nimport './components/styles/error.css'\nimport './components/styles/signInEmail.css'\nimport './components/styles/messageContent.css'\nimport './components/styles/Map.css'\nimport { auth, provider } from './FirebaseConfig'\nimport firebase from './FirebaseConfig.js'\nimport Navbar from './components/Navbar'\nimport ErrorMessage from './components/ErrorMessage'\n\nfunction App() {\n    // state stuff\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [userId, setUserId] = useState('')\n    const [userName, setUserName] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    // isNewUser set to null because we either want true or false to come from Firebase or after we tell it after they submit their details in UserProfile\n    const [isNewUser, setIsNewUser] = useState(null)\n\n    // componentDidMount to check local storage for logged in state\n    useEffect(() => {\n        const localLoggedIn = localStorage.getItem('loggedIn')\n        if (localLoggedIn === 'true') {\n            setIsLoggedIn(true)\n        }\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setUserId(user.uid)\n            }\n        })\n\n        setIsLoading(false)\n    }, [])\n    // console.log(userId, 'user ID in app')\n    // dark mode stuff\n    const [theme, themeToggler, mountedComponent] = useDarkMode()\n    const themeMode = theme === 'light' ? lightTheme : darkTheme\n\n    // method to toggle isLoggedIn in state\n    const setLoggedIn = () => {\n        if (!isLoggedIn) {\n            setIsLoggedIn(true)\n            // set local state\n            localStorage.setItem('loggedIn', 'true')\n        }\n    }\n    // method to set current user id in state\n    const setId = (id) => {\n        setUserId(id)\n    }\n    // method to set current userName in state\n    const setUsername = (username) => {\n        setUserName(username)\n    }\n    //method to logout\n\n    const logout = () => {\n        auth.signOut().then(() => {\n            localStorage.setItem('loggedIn', 'false')\n            setIsLoggedIn(false)\n            navigate('/')\n        })\n    }\n\n    // method to check if current user is new to app\n\n    // console.log(isLoggedIn, '<<isLoggedIn');\n    // console.log(theme, 'newTheme')\n    // console.log(isNewUser, 'isNewuser')\n    if (!mountedComponent) return <div />\n    return (\n        // dark mode styled components wrapper\n        <ThemeProvider theme={themeMode}>\n            <>\n                <GlobalStyles />\n                {/* check if isLoading */}\n                {isLoading ? (\n                    <Loading />\n                ) : (\n                    <div className='App'>\n                        <div className='headerContainer'>\n                            <Toggle theme={theme} toggleTheme={themeToggler} />\n                            <Header />\n                            {/* render logout button only when user logged in */}\n                            {isLoggedIn && (\n                                <Logout\n                                    theme={theme}\n                                    toggleTheme={themeToggler}\n                                    logout={logout}\n                                />\n                            )}\n                        </div>\n                        {/* check if isLoggedIn */}\n                        {!isLoggedIn ? (\n                            // pass login methods to Login component\n                            <Login\n                                setId={setId}\n                                setLoggedIn={setLoggedIn}\n                                setUsername={setUsername}\n                                setIsNewUser={setIsNewUser}\n                                path='/'\n                            />\n                        ) : (\n                            <>\n                                <Navbar />\n\n                                <Router>\n                                    <Main\n                                        path='/main'\n                                        theme={theme}\n                                        userId={userId}\n                                    />\n                                    <UserProfile\n                                        path='/user-profile'\n                                        userId={userId}\n                                        isNewUser={isNewUser}\n                                        setIsNewUser={setIsNewUser}\n                                        userName={userName}\n                                    />\n                                    <TravelAdvice path='/travel-advice' />\n                                    <ErrorMessage\n                                        msg='Page not found'\n                                        code='404'\n                                        default\n                                    />\n                                </Router>\n                            </>\n                        )}\n                    </div>\n                )}\n            </>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/FirebaseConfig.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Globalstyle.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Toggler.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/useDarkMode.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Themes.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Header.js",["136"],"import React from 'react'\nimport Toggle from './Toggler'\nimport HomeIconSphere from '../icons/HomeIconSphere.png'\n\nconst Header = (props) => {\n    return (\n        <h1 className='headerContent'>\n            <img src={HomeIconSphere} className='HomeIcon' alt='icon'></img>\n            Safe Home\n        </h1>\n    )\n}\n\nexport default Header\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Loading.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Logout.js",["137","138","139"],"import React from 'react'\nimport { auth, provider, firebase } from '../FirebaseConfig.js'\nimport styled from 'styled-components'\n\nconst LogoutButton = styled.button`\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 30px;\n    cursor: pointer;\n    font-size: 0.5rem;\n    justify-content: space-between;\n    justify-self: left;\n    overflow: hidden;\n    padding: 0.5rem;\n    width: 4rem;\n    height: 3rem;\n`\nconst Logout = (props) => {\n    return <LogoutButton onClick={props.logout}>LOGOUT</LogoutButton>\n}\nexport default Logout\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Login.js",["140","141","142","143"],"import { navigate } from '@reach/router'\nimport { React, useState, useEffect } from 'react'\nimport { auth, google, facebook } from '../FirebaseConfig'\nimport firebase from '../FirebaseConfig.js'\nimport SignInEmail from './SignInEmail'\nimport GoogleLogin from './GoogleLogin'\nimport SignupForm from './SignupForm'\nimport FacebookLogin from './FacebookLogin'\n\nconst Login = (props) => {\n    //state stuff\n    const [showSignup, setShowSignup] = useState(false)\n    const [loginError, setLoginError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {}, [])\n    // sign in with email method\n    const signInEmail = (email, password) => {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                const newUser = result.additionalUserInfo.isNewUser\n                //use methods on props to change state in App.js\n                props.setIsNewUser(newUser)\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                localStorage.setItem('isNewUser', JSON.stringify(newUser))\n                localStorage.setItem('userId', JSON.stringify(uid))\n\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    // google login functionality\n    const googleLogin = () => {\n        auth.signInWithPopup(google)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                localStorage.setItem('isNewUser', JSON.stringify(newUser))\n                localStorage.setItem('userId', JSON.stringify(uid))\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n    // google login functionality\n    const facebookLogin = () => {\n        console.log('clicked')\n        auth.signInWithPopup(facebook)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                console.log(result)\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                localStorage.setItem('isNewUser', JSON.stringify(newUser))\n                localStorage.setItem('userId', JSON.stringify(uid))\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    //toggle show signup button\n    const toggleShowSignup = () => {\n        if (showSignup) {\n            setShowSignup(false)\n        } else {\n            setShowSignup(true)\n        }\n    }\n    // sign up login method\n    const handleSignUp = (username, email, password) => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                console.log(user)\n                const { uid } = firebase.auth().currentUser\n                const userInfo = firebase.auth().currentUser\n                const newUser = user.additionalUserInfo.isNewUser\n                userInfo.updateProfile({\n                    displayName: username,\n                })\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(username)\n                props.setIsNewUser(newUser)\n                localStorage.setItem('isNewUser', JSON.stringify(newUser))\n                localStorage.setItem('userId', JSON.stringify(uid))\n                navigate('/main')\n            })\n            .catch((error) => {\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    return (\n        <div className='loginPage'>\n            <h2 className='loginpageTitle'>LOGIN PAGE</h2>\n\n            {loginError && <div className='loginError'>{errorMessage}</div>}\n\n            <SignInEmail signInEmail={signInEmail} />\n\n            <GoogleLogin googleLogin={googleLogin} />\n\n            <FacebookLogin facebookLogin={facebookLogin} />\n\n            <div className='signupButtonContainer'>\n                <button\n                    className='toggleSignupButton'\n                    onClick={toggleShowSignup}\n                >\n                    {showSignup ? 'hide signup' : 'show signup'}\n                </button>\n            </div>\n\n            {showSignup && <SignupForm handleSignUp={handleSignUp} />}\n        </div>\n    )\n}\n\nexport default Login\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/ErrorMessage.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/UserProfile.js",["144","145","146","147","148"],"import { React, useState, useEffect, useContext } from 'react'\nimport { getUserByUid, postNewUser } from './backendApi'\nimport Loading from './Loading'\nimport SetContacts from './UserContacts'\nimport UserContacts from './UserContacts'\n\nfunction UserProfile(props) {\n    // const [firebaseUid, setFirebaseUid] = useState('')\n    // const [users, setUsers] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n    // const [isNewUser, setIsNewUser] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [userName, setUserName] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const [houseNumber, setHouseNumber] = useState('')\n    const [streetName, setStreetName] = useState('')\n    const [postCode, setPostCode] = useState('')\n    const [city, setCity] = useState('')\n    const [userData, setUserData] = useState('')\n    const [isNewUser, setIsNewUser] = useState(false)\n    const [userId, setUserId] = useState('')\n\n    // set state\n    useEffect(() => {\n        // we don't need to change isLoading here\n        // console.log(props.userId, 'USER ID IN USER PROFILE')\n        // const reloadUserId = JSON.parse(localStorage.getItem('userProfileId'))\n\n        const userId = JSON.parse(localStorage.getItem('userId'))\n        const isNewUser = JSON.parse(localStorage.getItem('isNewUser'))\n        console.log(userId, 'user ID in profile')\n        console.log(isNewUser, 'isNewUser in profile')\n\n        if (isNewUser) {\n            setIsNewUser(true)\n            setIsLoading(false)\n        } else if (\n            !isNewUser &&\n            localStorage.getItem.localUser !== 'undefined'\n        ) {\n            getUserByUid(userId).then((user) => {\n                setUserData(user)\n\n                localStorage.setItem('localUser', JSON.stringify(user))\n                setIsLoading(false)\n            })\n        } else if (\n            !isNewUser &&\n            localStorage.getItem('localUser') === 'undefined'\n        ) {\n            const userId = JSON.parse(localStorage.getItem('userId'))\n            getUserByUid(userId).then((user) => {\n                setUserData(user)\n\n                localStorage.setItem('localUser', JSON.stringify(userData))\n                setIsLoading(false)\n            })\n        }\n    }, [])\n\n    const handleNewUserSubmit = (event) => {\n        event.preventDefault()\n        const newUser = {\n            first_name: firstName,\n            last_name: lastName,\n            username: userName,\n            phone_number: phoneNumber,\n            house_number: +houseNumber,\n            street_name: streetName,\n            postcode: postCode,\n            city: city,\n            uid: props.userId,\n        }\n        postNewUser(newUser).then((user) => {\n            setUserData(user)\n            localStorage.setItem('localUser', JSON.stringify(user))\n            localStorage.setItem('isNewUser', JSON.stringify(false))\n            // also save newUser to localStorage\n            props.setIsNewUser(false)\n            setIsNewUser(false)\n        })\n    }\n\n    return (\n        <div className='userProfileContent'>\n            {/* why is this not stuck on load when you are a new user coming to the page for the first time? */}\n            {isLoading ? (\n                <Loading />\n            ) : isNewUser ? (\n                <>\n                    <h2>New User Profile</h2>\n                    <form\n                        onSubmit={handleNewUserSubmit}\n                        className='newUserForm'\n                    >\n                        <label>\n                            First Name:\n                            <input\n                                name='firstName'\n                                type='text'\n                                placeholder='First Name'\n                                required\n                                value={firstName}\n                                onChange={(event) =>\n                                    setFirstName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Last Name:\n                            <input\n                                name='lastName'\n                                type='text'\n                                placeholder='Last Name'\n                                required\n                                value={lastName}\n                                onChange={(event) =>\n                                    setLastName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Username:\n                            <input\n                                placeholder='Username'\n                                required\n                                value={userName}\n                                onChange={(event) =>\n                                    setUserName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Phone Number:\n                            <input\n                                name='phoneNumber'\n                                type='text'\n                                placeholder='Phone Number'\n                                required\n                                value={phoneNumber}\n                                onChange={(event) =>\n                                    setPhoneNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            House Number:\n                            <input\n                                name='houseNumber'\n                                type='number'\n                                placeholder='House Number'\n                                required\n                                value={houseNumber}\n                                onChange={(event) =>\n                                    setHouseNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Street Name:\n                            <input\n                                name='streetName'\n                                type='text'\n                                placeholder='Street Name'\n                                required\n                                value={streetName}\n                                onChange={(event) =>\n                                    setStreetName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Post Code:\n                            <input\n                                name='postCode'\n                                type='text'\n                                placeholder='Post Code'\n                                required\n                                value={postCode}\n                                onChange={(event) =>\n                                    setPostCode(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            City:\n                            <input\n                                name='city'\n                                type='text'\n                                placeholder='City'\n                                required\n                                value={city}\n                                onChange={(event) =>\n                                    setCity(event.target.value)\n                                }\n                            />\n                        </label>\n                        <button type='submit'>Create Account</button>\n                    </form>\n                </>\n            ) : (\n                <>\n                    <h2>User Profile</h2>\n                    {!userData ? (\n                        <Loading />\n                    ) : (\n                        <div>\n                            <p>First Name: {userData.user.first_name}</p>\n                            <p>Last Name: {userData.user.last_name}</p>\n                            <p>User Name: {userData.user.username}</p>\n                            <p>Phone Number: {userData.user.phone_number}</p>\n                            <p>House Number: {userData.user.house_number}</p>\n                            <p>Street Name: {userData.user.street_name}</p>\n                            <p>Post Code: {userData.user.postcode}</p>\n                            <p>City: {userData.user.city}</p>\n                        </div>\n                    )}\n                </>\n            )}\n            <UserContacts />\n        </div>\n    )\n}\n\nexport default UserProfile\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Navbar.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/TravelAdvice.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Main.js",["149","150","151"],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/backendApi.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/SignupForm.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/GoogleLogin.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/SignInEmail.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/FacebookLogin.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/UserContacts.js",["152","153","154","155","156","157","158","159"],"import { React, useState, useEffect, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst UserContacts = () => {\n    // material UI stuff\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n        },\n    }))\n    const classes = useStyles()\n\n    // state stuff\n    const [showContactsForm, setShowContactsForm] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n\n    const handleShowContactsForm = () => {\n        if (showContactsForm) {\n            setShowContactsForm(false)\n        } else {\n            setShowContactsForm(true)\n        }\n    }\n    return (\n        <div className='userContactsContainer'>\n            <h2>CONTACTS</h2>\n            <div>some contacts</div>\n            <button onClick={handleShowContactsForm}>\n                {showContactsForm ? 'Hide Contacts Form' : 'Show contacts Form'}\n            </button>\n            {showContactsForm && (\n                <div className='userContactsForm'>\n                    {'contacts form '}\n                    {/* <form\n                        className={classes.root}\n                        noValidate\n                        autoComplete='off'\n                    >\n                        <TextField\n                            className='form-control'\n                            id='filled-basic'\n                            label='Person 1'\n                            name='personOne'\n                            type='text'\n                            value={personOne}\n                            onChange={(event) =>\n                                savePersonOne(event.target.value)\n                            }\n                            variant='filled'\n                        />\n                        <TextField\n                            className='form-control'\n                            id='filled-basic'\n                            label='Person 2'\n                            name='personTwo'\n                            type='text'\n                            value={personTwo}\n                            onChange={(event) =>\n                                savePersonTwo(event.target.value)\n                            }\n                            variant='filled'\n                        />\n                        <TextField\n                            className='form-control'\n                            id='filled-basic'\n                            label='Person 3'\n                            name='personThree'\n                            type='text'\n                            value={personThree}\n                            onChange={(event) =>\n                                savePersonThree(event.target.value)\n                            }\n                            variant='filled'\n                        />\n                    </form> */}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default UserContacts\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/WhoYouWith.js",["160"],"import { React, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}))\n\nfunction WhoYouWith(props) {\n    const {\n        savePersonOne,\n        personOne,\n        savePersonTwo,\n        personTwo,\n        savePersonThree,\n        personThree,\n    } = props\n\n    const classes = useStyles()\n\n    return (\n        <div className='whoYouWithContent'>\n            <p className='whoYouWithTitle'>Who You With? </p>\n            <div className='whoYouWithForm'>\n                <form className={classes.root} noValidate autoComplete='off'>\n                    <TextField\n                        className='form-control'\n                        id='filled-basic'\n                        label='Person 1'\n                        name='personOne'\n                        type='text'\n                        value={personOne}\n                        onChange={(event) => savePersonOne(event.target.value)}\n                        variant='filled'\n                    />\n                    <TextField\n                        className='form-control'\n                        id='filled-basic'\n                        label='Person 2'\n                        name='personTwo'\n                        type='text'\n                        value={personTwo}\n                        onChange={(event) => savePersonTwo(event.target.value)}\n                        variant='filled'\n                    />\n                    <TextField\n                        className='form-control'\n                        id='filled-basic'\n                        label='Person 3'\n                        name='personThree'\n                        type='text'\n                        value={personThree}\n                        onChange={(event) =>\n                            savePersonThree(event.target.value)\n                        }\n                        variant='filled'\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default WhoYouWith\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/JourneyDetails.js",["161","162","163","164"],"import { React, useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nfunction JourneyDetails(props) {\n    const classes = useStyles()\n    const {\n        setTravelMode,\n        travelMode,\n        setTaxiReg,\n        taxiReg,\n        setBusService,\n        busService,\n        setTrainService,\n        trainService,\n        setTravelCompanion,\n        travelCompanion,\n        setOther,\n        other,\n    } = props\n\n    return (\n        <div className='journeyContent'>\n            <FormControl\n                variant='filled'\n                className='form-control'\n                style={{ minWidth: 224 }}\n            >\n                <InputLabel id='demo-simple-select-filled-label'>\n                    Select Travel Mode\n                </InputLabel>\n                <Select\n                    labelId='demo-simple-select-filled-label'\n                    id='demo-simple-select-filled'\n                    onChange={(event) => {\n                        setTravelMode(event.target.value)\n                    }}\n                    className='form-control'\n                >\n                    <MenuItem value='walking'>\n                        <em>Walking</em>\n                    </MenuItem>\n                    <MenuItem value='taxi'>Taxi</MenuItem>\n                    <MenuItem value='train'>Train</MenuItem>\n                    <MenuItem value='bus'>Bus</MenuItem>\n                    <MenuItem value='other'>Other</MenuItem>\n                </Select>\n            </FormControl>\n\n            <div className='newUserForm'>\n                {travelMode === 'taxi' && (\n                    <div className='form-group'>\n                        <form\n                            className={classes.root}\n                            noValidate\n                            autoComplete='off'\n                        >\n                            <TextField\n                                id='taxiReg'\n                                label='Taxi Reg'\n                                className='form-control'\n                                variant='outlined'\n                                name='taxiReg'\n                                type='text'\n                                placeholder='Taxi Reg'\n                                required\n                                value={taxiReg}\n                                onChange={(event) =>\n                                    setTaxiReg(event.target.value)\n                                }\n                            />\n                        </form>\n                    </div>\n                )}\n                {travelMode === 'bus' && (\n                    <div className='form-group'>\n                        <form\n                            className={classes.root}\n                            noValidate\n                            autoComplete='off'\n                        >\n                            <TextField\n                                id='busService'\n                                label='Bus service'\n                                className='form-control'\n                                variant='outlined'\n                                name='busService'\n                                type='text'\n                                placeholder='Bus Service'\n                                required\n                                value={busService}\n                                onChange={(event) =>\n                                    setBusService(event.target.value)\n                                }\n                            />\n                        </form>\n                    </div>\n                )}\n\n                {travelMode === 'train' && (\n                    <div className='form-group'>\n                        <form\n                            className={classes.root}\n                            noValidate\n                            autoComplete='off'\n                        >\n                            <TextField\n                                id='trainService'\n                                label='Train service'\n                                className='form-control'\n                                variant='outlined'\n                                name='trainService'\n                                type='text'\n                                placeholder='Train Service'\n                                required\n                                value={trainService}\n                                onChange={(event) =>\n                                    setTrainService(event.target.value)\n                                }\n                            />\n                        </form>\n                    </div>\n                )}\n                {travelMode === 'other' && (\n                    <div className='form-group'>\n                        <form\n                            className={classes.root}\n                            noValidate\n                            autoComplete='off'\n                        >\n                            <TextField\n                                id='other'\n                                label='Other'\n                                className='form-control'\n                                variant='outlined'\n                                name='other'\n                                type='text'\n                                placeholder='please give details'\n                                required\n                                value={other}\n                                onChange={(event) =>\n                                    setOther(event.target.value)\n                                }\n                            />\n                        </form>\n                    </div>\n                )}\n                <div className='form-group'>\n                    <form\n                        className={classes.root}\n                        noValidate\n                        autoComplete='off'\n                    >\n                        <TextField\n                            id='travelCompanion'\n                            label='Travel companion ?'\n                            className='form-control'\n                            variant='outlined'\n                            name='travelCompanion'\n                            type='text'\n                            placeholder='Travel Companion?'\n                            value={travelCompanion}\n                            onChange={(event) =>\n                                setTravelCompanion(event.target.value)\n                            }\n                        />\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default JourneyDetails\n","/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Map.js",["165"],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/SelectContact.js",["166","167","168"],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/geocodeApi.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/Switch.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/components/styles/MapNightMode.js",[],"/Users/olirooker/Documents/Northcoders/Final-Project/nc-final-project-frontend/src/CrimeApi.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},{"ruleId":"173","severity":1,"message":"177","line":1,"column":39,"nodeType":"175","messageId":"176","endLine":1,"endColumn":52},{"ruleId":"173","severity":1,"message":"178","line":27,"column":16,"nodeType":"175","messageId":"176","endLine":27,"endColumn":24},{"ruleId":"173","severity":1,"message":"179","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"180","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"178","line":2,"column":16,"nodeType":"175","messageId":"176","endLine":2,"endColumn":24},{"ruleId":"173","severity":1,"message":"181","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":34},{"ruleId":"173","severity":1,"message":"182","line":38,"column":23,"nodeType":"175","messageId":"176","endLine":38,"endColumn":32},{"ruleId":"173","severity":1,"message":"182","line":63,"column":23,"nodeType":"175","messageId":"176","endLine":63,"endColumn":32},{"ruleId":"173","severity":1,"message":"182","line":89,"column":23,"nodeType":"175","messageId":"176","endLine":89,"endColumn":32},{"ruleId":"173","severity":1,"message":"182","line":126,"column":23,"nodeType":"175","messageId":"176","endLine":126,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":48},{"ruleId":"173","severity":1,"message":"183","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"173","severity":1,"message":"184","line":22,"column":12,"nodeType":"175","messageId":"176","endLine":22,"endColumn":18},{"ruleId":"173","severity":1,"message":"185","line":22,"column":20,"nodeType":"175","messageId":"176","endLine":22,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":60,"column":8,"nodeType":"188","endLine":60,"endColumn":10,"suggestions":"189"},{"ruleId":"173","severity":1,"message":"184","line":31,"column":12,"nodeType":"175","messageId":"176","endLine":31,"endColumn":18},{"ruleId":"186","severity":1,"message":"190","line":67,"column":8,"nodeType":"188","endLine":67,"endColumn":10,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":241,"column":50,"nodeType":"194","messageId":"195","endLine":241,"endColumn":52},{"ruleId":"173","severity":1,"message":"196","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"174","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":48},{"ruleId":"173","severity":1,"message":"197","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":17},{"ruleId":"173","severity":1,"message":"198","line":15,"column":11,"nodeType":"175","messageId":"176","endLine":15,"endColumn":18},{"ruleId":"173","severity":1,"message":"199","line":19,"column":12,"nodeType":"175","messageId":"176","endLine":19,"endColumn":21},{"ruleId":"173","severity":1,"message":"200","line":19,"column":23,"nodeType":"175","messageId":"176","endLine":19,"endColumn":35},{"ruleId":"173","severity":1,"message":"201","line":20,"column":12,"nodeType":"175","messageId":"176","endLine":20,"endColumn":20},{"ruleId":"173","severity":1,"message":"202","line":20,"column":22,"nodeType":"175","messageId":"176","endLine":20,"endColumn":33},{"ruleId":"173","severity":1,"message":"203","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"203","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"196","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"204","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":22},{"ruleId":"173","severity":1,"message":"205","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":14},{"ruleId":"186","severity":1,"message":"206","line":91,"column":8,"nodeType":"188","endLine":91,"endColumn":24,"suggestions":"207"},{"ruleId":"173","severity":1,"message":"203","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"196","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"208","line":11,"column":11,"nodeType":"175","messageId":"176","endLine":11,"endColumn":20},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'provider' is defined but never used.","'Toggle' is defined but never used.","'auth' is defined but never used.","'firebase' is defined but never used.","'errorCode' is assigned a value but never used.","'SetContacts' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has missing dependencies: 'apiCalled' and 'props.userId'. Either include them or remove the dependency array. If 'setUserId' needs the current value of 'props.userId', you can also switch to useReducer instead of useState and read 'props.userId' in the reducer.",["212"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'firstName' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'useState' is defined but never used.","'FormHelperText' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'setLocation' and 'watchLocation'. Either include them or remove the dependency array.",["213"],"'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [userData]",{"range":"220","text":"221"},"Update the dependencies array to be: [apiCalled, props.userId]",{"range":"222","text":"223"},"Update the dependencies array to be: [setLocation, startedJourney, watchLocation]",{"range":"224","text":"225"},[2343,2345],"[userData]",[2495,2497],"[apiCalled, props.userId]",[2869,2885],"[setLocation, startedJourney, watchLocation]"]

