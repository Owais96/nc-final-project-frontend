[{"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/index.js":"1","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/App.js":"2","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/FirebaseConfig.js":"3","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/useDarkMode.js":"4","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Globalstyle.js":"5","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Loading.js":"6","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Login.js":"7","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Header.js":"8","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Main.js":"9","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Navbar.js":"10","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Themes.js":"11","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Toggler.js":"12","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/UserProfile.js":"13","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Logout.js":"14","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/TravelAdvice.js":"15","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/ErrorMessage.js":"16","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/GoogleLogin.js":"17","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignInEmail.js":"18","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignupForm.js":"19","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Map.js":"20","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/styles/MapNightMode.js":"21","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/backendApi.js":"22"},{"size":417,"mtime":1610035410670,"results":"23","hashOfConfig":"24"},{"size":5549,"mtime":1610042643358,"results":"25","hashOfConfig":"24"},{"size":1029,"mtime":1610038495398,"results":"26","hashOfConfig":"24"},{"size":657,"mtime":1610035405762,"results":"27","hashOfConfig":"24"},{"size":303,"mtime":1610035394801,"results":"28","hashOfConfig":"24"},{"size":131,"mtime":1610035397060,"results":"29","hashOfConfig":"24"},{"size":4223,"mtime":1610042530577,"results":"30","hashOfConfig":"24"},{"size":164,"mtime":1610035396293,"results":"31","hashOfConfig":"24"},{"size":469,"mtime":1610035399184,"results":"32","hashOfConfig":"24"},{"size":497,"mtime":1610035400641,"results":"33","hashOfConfig":"24"},{"size":317,"mtime":1610035403783,"results":"34","hashOfConfig":"24"},{"size":3131,"mtime":1610035404523,"results":"35","hashOfConfig":"24"},{"size":862,"mtime":1610042833107,"results":"36","hashOfConfig":"24"},{"size":588,"mtime":1610035398559,"results":"37","hashOfConfig":"24"},{"size":157,"mtime":1610035405147,"results":"38","hashOfConfig":"24"},{"size":167,"mtime":1610035394054,"results":"39","hashOfConfig":"24"},{"size":297,"mtime":1610035395610,"results":"40","hashOfConfig":"24"},{"size":1245,"mtime":1610035402459,"results":"41","hashOfConfig":"24"},{"size":1702,"mtime":1610035403195,"results":"42","hashOfConfig":"24"},{"size":9132,"mtime":1610035400215,"results":"43","hashOfConfig":"24"},{"size":5111,"mtime":1610035390000,"results":"44","hashOfConfig":"24"},{"size":229,"mtime":1610039907077,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"zlqoy5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/index.js",[],["97","98"],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/App.js",["99","100","101","102"],"import { React, useState, useContext, createContext, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { useDarkMode } from './components/useDarkMode'\nimport { GlobalStyles } from './components/Globalstyle'\nimport { lightTheme, darkTheme } from './components/Themes'\nimport Toggle from './components/Toggler'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Loading from './components/Loading'\nimport Logout from './components/Logout'\nimport Main from './components/Main'\nimport UserProfile from './components/UserProfile'\nimport TravelAdvice from './components/TravelAdvice'\nimport { Router, navigate } from '@reach/router'\nimport './components/styles/App.css'\nimport './components/styles/mainContent.css'\nimport './components/styles/header.css'\nimport './components/styles/loading.css'\nimport './components/styles/loginPage.css'\nimport './components/styles/travelAdvice.css'\nimport './components/styles/userProfile.css'\nimport './components/styles/navbar.css'\nimport './components/styles/error.css'\nimport './components/styles/signInEmail.css'\nimport { auth, provider } from './FirebaseConfig'\nimport firebase from './FirebaseConfig.js'\nimport Navbar from './components/Navbar'\nimport ErrorMessage from './components/ErrorMessage'\n\nfunction App() {\n    // state stuff\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [userId, setUserId] = useState('')\n    const [userName, setUserName] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [isNewUser, setIsNewUser] = useState(false)\n\n    // componentDidMount to check local storage for logged in state\n    useEffect(() => {\n        const localLoggedIn = localStorage.getItem('loggedIn')\n        if (localLoggedIn === 'true') {\n            setIsLoggedIn(true)\n        }\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setUserId(user.uid)\n            }\n        })\n\n        setIsLoading(false)\n    }, [])\n    console.log(userId, 'user ID in app')\n    // dark mode stuff\n    const [theme, themeToggler, mountedComponent] = useDarkMode()\n    const themeMode = theme === 'light' ? lightTheme : darkTheme\n\n    // method to toggle isLoggedIn in state\n    const setLoggedIn = () => {\n        if (!isLoggedIn) {\n            setIsLoggedIn(true)\n            // set local state\n            localStorage.setItem('loggedIn', 'true')\n        }\n    }\n    // method to set current user id in state\n    const setId = (id) => {\n        setUserId(id)\n    }\n    // method to set current userName in state\n    const setUsername = (username) => {\n        setUserName(username)\n    }\n    //method to logout\n\n    const logout = () => {\n        auth.signOut().then(() => {\n            localStorage.setItem('loggedIn', 'false')\n            setIsLoggedIn(false)\n            navigate('/')\n        })\n    }\n\n    // method to check if current user is new to app\n\n    // console.log(isLoggedIn, '<<isLoggedIn');\n    console.log(theme, 'newTheme')\n    console.log(isNewUser, 'isNewuser')\n    if (!mountedComponent) return <div />\n    return (\n        // dark mode styled components wrapper\n        <ThemeProvider theme={themeMode}>\n            <>\n                <GlobalStyles />\n                {/* check if isLoading */}\n                {isLoading ? (\n                    <Loading />\n                ) : (\n                    <div className='App'>\n                        <div className='headerContainer'>\n                            <Toggle theme={theme} toggleTheme={themeToggler} />\n                            <Header />\n                            {/* render logout button only when user logged in */}\n                            {isLoggedIn && (\n                                <Logout\n                                    theme={theme}\n                                    toggleTheme={themeToggler}\n                                    logout={logout}\n                                />\n                            )}\n                        </div>\n                        {/* check if isLoggedIn */}\n                        {!isLoggedIn ? (\n                            // pass login methods to Login component\n                            <Login\n                                setId={setId}\n                                setLoggedIn={setLoggedIn}\n                                setUsername={setUsername}\n                                setIsNewUser={setIsNewUser}\n                                path='/'\n                            />\n                        ) : (\n                            <>\n                                <Navbar />\n\n                                <Router>\n                                    <Main path='/main' theme={theme} />\n                                    <UserProfile\n                                        path='/user-profile'\n                                        userId={userId}\n                                        isNewUser={isNewUser}\n                                    />\n                                    <TravelAdvice path='/travel-advice' />\n                                    <ErrorMessage\n                                        msg='Page not found'\n                                        code='404'\n                                        default\n                                    />\n                                </Router>\n                            </>\n                        )}\n                    </div>\n                )}\n            </>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/FirebaseConfig.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/useDarkMode.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Globalstyle.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Loading.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Login.js",["103","104","105"],"import { navigate } from '@reach/router'\nimport { React, useState, useEffect } from 'react'\nimport { auth, provider } from '../FirebaseConfig'\nimport firebase from '../FirebaseConfig.js'\nimport SignInEmail from './SignInEmail'\nimport GoogleLogin from './GoogleLogin'\nimport SignupForm from './SignupForm'\n\nconst Login = (props) => {\n    //state stuff\n    const [showSignup, setShowSignup] = useState(false)\n    const [loginError, setLoginError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {}, [])\n    // sign in with email method\n    const signInEmail = (email, password) => {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                const newUser = result.additionalUserInfo.isNewUser\n                //use methods on props to change state in App.js\n                props.setIsNewUser(newUser)\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    // google login functionality\n    const googleLogin = () => {\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    //toggle show signup button\n    const toggleShowSignup = () => {\n        if (showSignup) {\n            setShowSignup(false)\n        } else {\n            setShowSignup(true)\n        }\n    }\n    // sign up login method\n    const handleSignUp = (username, email, password) => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                console.log(user)\n                const { uid } = firebase.auth().currentUser\n                const userInfo = firebase.auth().currentUser\n                const newUser = user.additionalUserInfo.isNewUser\n                userInfo.updateProfile({\n                    displayName: username,\n                })\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(username)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    return (\n        <div className='loginPage'>\n            <h2 className='loginpageTitle'>LOGIN PAGE</h2>\n\n            {loginError && <div className='loginError'>{errorMessage}</div>}\n\n            <SignInEmail signInEmail={signInEmail} />\n\n            <GoogleLogin googleLogin={googleLogin} />\n\n            <div className='signupButtonContainer'>\n                <button\n                    className='toggleSignupButton'\n                    onClick={toggleShowSignup}\n                >\n                    {showSignup ? 'hide signup' : 'show signup'}\n                </button>\n            </div>\n\n            {showSignup && <SignupForm handleSignUp={handleSignUp} />}\n        </div>\n    )\n}\n\nexport default Login\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Header.js",["106"],"import React from 'react'\nimport Toggle from './Toggler'\n\nconst Header = (props) => {\n    return <h1 className=\"headerContent\">Header</h1>\n}\n\nexport default Header\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Main.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Navbar.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Themes.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Toggler.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/UserProfile.js",["107","108","109","110","111"],"import { React, useState, useEffect, useContext } from 'react'\nimport { getUsers } from './backendApi'\nimport Loading from './Loading'\n\nfunction UserProfile(props) {\n    const [firebaseUid, setFirebaseUid] = useState('')\n    const [users, setUsers] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n    const [isNewUser, setIsNewUser] = useState(false)\n\n    // set state\n    useEffect(() => {\n        setFirebaseUid(props.userId)\n        setIsLoading(false)\n        setIsNewUser(props.isNewUser)\n    }, [])\n\n    console.log(firebaseUid, 'UID')\n\n    return (\n        <div className='userProfileContent'>\n            {isLoading ? (\n                <Loading />\n            ) : isNewUser ? (\n                <>New User Profile</>\n            ) : (\n                <>User Profile</>\n            )}\n        </div>\n    )\n}\n\nexport default UserProfile\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Logout.js",["112","113","114"],"import React from 'react'\nimport { auth, provider, firebase } from '../FirebaseConfig.js'\nimport styled from 'styled-components'\n\nconst LogoutButton = styled.button`\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 30px;\n    cursor: pointer;\n    font-size: 0.5rem;\n    justify-content: space-between;\n    justify-self: left;\n    overflow: hidden;\n    padding: 0.5rem;\n\n    width: 4rem;\n    height: 3rem;\n    outline: solid green 2px;\n`\nconst Logout = (props) => {\n    return <LogoutButton onClick={props.logout}>LOGOUT</LogoutButton>\n}\nexport default Logout\n","/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/TravelAdvice.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/ErrorMessage.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/GoogleLogin.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignInEmail.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/SignupForm.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/Map.js",[],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/styles/MapNightMode.js",[],["115","116"],"/Users/alanharrison/Desktop/Northcoders/Project/nc-final-project-fe/src/components/backendApi.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":37},{"ruleId":"121","severity":1,"message":"125","line":1,"column":39,"nodeType":"123","messageId":"124","endLine":1,"endColumn":52},{"ruleId":"121","severity":1,"message":"126","line":25,"column":16,"nodeType":"123","messageId":"124","endLine":25,"endColumn":24},{"ruleId":"121","severity":1,"message":"127","line":34,"column":12,"nodeType":"123","messageId":"124","endLine":34,"endColumn":20},{"ruleId":"121","severity":1,"message":"128","line":34,"column":23,"nodeType":"123","messageId":"124","endLine":34,"endColumn":32},{"ruleId":"121","severity":1,"message":"128","line":57,"column":23,"nodeType":"123","messageId":"124","endLine":57,"endColumn":32},{"ruleId":"121","severity":1,"message":"128","line":92,"column":23,"nodeType":"123","messageId":"124","endLine":92,"endColumn":32},{"ruleId":"121","severity":1,"message":"129","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":1,"column":38,"nodeType":"123","messageId":"124","endLine":1,"endColumn":48},{"ruleId":"121","severity":1,"message":"130","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"131","line":7,"column":12,"nodeType":"123","messageId":"124","endLine":7,"endColumn":17},{"ruleId":"121","severity":1,"message":"132","line":7,"column":19,"nodeType":"123","messageId":"124","endLine":7,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":16,"column":8,"nodeType":"135","endLine":16,"endColumn":10,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"137","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"126","line":2,"column":16,"nodeType":"123","messageId":"124","endLine":2,"endColumn":24},{"ruleId":"121","severity":1,"message":"138","line":2,"column":26,"nodeType":"123","messageId":"124","endLine":2,"endColumn":34},{"ruleId":"117","replacedBy":"139"},{"ruleId":"119","replacedBy":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'provider' is defined but never used.","'userName' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'Toggle' is defined but never used.","'getUsers' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.isNewUser' and 'props.userId'. Either include them or remove the dependency array. If 'setFirebaseUid' needs the current value of 'props.userId', you can also switch to useReducer instead of useState and read 'props.userId' in the reducer.","ArrayExpression",["143"],"'auth' is defined but never used.","'firebase' is defined but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [props.isNewUser, props.userId]",{"range":"146","text":"147"},[521,523],"[props.isNewUser, props.userId]"]