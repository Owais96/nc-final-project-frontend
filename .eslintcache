[{"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/index.js":"1","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/App.js":"2","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/FirebaseConfig.js":"3","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Themes.js":"4","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Globalstyle.js":"5","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Logout.js":"6","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Toggler.js":"7","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Header.js":"8","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Loading.js":"9","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/UserProfile.js":"10","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Navbar.js":"11","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/TravelAdvice.js":"12","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Login.js":"13","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/ErrorMessage.js":"14","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/useDarkMode.js":"15","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Main.js":"16","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignInEmail.js":"17","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignupForm.js":"18","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/GoogleLogin.js":"19","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Map.js":"20","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/styles/MapNightMode.js":"21"},{"size":411,"mtime":1609855642287,"results":"22","hashOfConfig":"23"},{"size":4196,"mtime":1609949343166,"results":"24","hashOfConfig":"23"},{"size":1122,"mtime":1609866349136,"results":"25","hashOfConfig":"23"},{"size":303,"mtime":1609855642285,"results":"26","hashOfConfig":"23"},{"size":305,"mtime":1609855642284,"results":"27","hashOfConfig":"23"},{"size":571,"mtime":1609855642285,"results":"28","hashOfConfig":"23"},{"size":2857,"mtime":1609855642285,"results":"29","hashOfConfig":"23"},{"size":167,"mtime":1609855642284,"results":"30","hashOfConfig":"23"},{"size":133,"mtime":1609855642284,"results":"31","hashOfConfig":"23"},{"size":154,"mtime":1609865752482,"results":"32","hashOfConfig":"23"},{"size":430,"mtime":1609865752482,"results":"33","hashOfConfig":"23"},{"size":158,"mtime":1609865752482,"results":"34","hashOfConfig":"23"},{"size":3315,"mtime":1609929856234,"results":"35","hashOfConfig":"23"},{"size":168,"mtime":1609865752480,"results":"36","hashOfConfig":"23"},{"size":629,"mtime":1609949343171,"results":"37","hashOfConfig":"23"},{"size":453,"mtime":1609949343167,"results":"38","hashOfConfig":"23"},{"size":973,"mtime":1609929856238,"results":"39","hashOfConfig":"23"},{"size":1313,"mtime":1609929856238,"results":"40","hashOfConfig":"23"},{"size":268,"mtime":1609929856233,"results":"41","hashOfConfig":"23"},{"size":3917,"mtime":1609955440483,"results":"42","hashOfConfig":"23"},{"size":4487,"mtime":1609953812823,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yx8qv1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/index.js",[],["91","92"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/App.js",["93","94","95"],"import { React, useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useDarkMode } from \"./components/useDarkMode\";\nimport { GlobalStyles } from \"./components/Globalstyle\";\nimport { lightTheme, darkTheme } from \"./components/Themes\";\nimport Toggle from \"./components/Toggler\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Loading from \"./components/Loading\";\nimport Logout from \"./components/Logout\";\nimport Main from \"./components/Main\";\nimport UserProfile from \"./components/UserProfile\";\nimport TravelAdvice from \"./components/TravelAdvice\";\nimport { Router, navigate } from \"@reach/router\";\nimport \"./components/styles/App.css\";\nimport \"./components/styles/mainContent.css\";\nimport \"./components/styles/header.css\";\nimport \"./components/styles/loading.css\";\nimport \"./components/styles/loginPage.css\";\nimport \"./components/styles/travelAdvice.css\";\nimport \"./components/styles/userProfile.css\";\nimport \"./components/styles/navbar.css\";\nimport \"./components/styles/error.css\";\nimport \"./components/styles/signInEmail.css\";\nimport { auth, provider } from \"./FirebaseConfig\";\nimport Navbar from \"./components/Navbar\";\nimport ErrorMessage from \"./components/ErrorMessage\";\n\nfunction App() {\n  // state stuff\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  // componentDidMount to check local storage for logged in state\n  useEffect(() => {\n    const localLoggedIn = localStorage.getItem(\"loggedIn\");\n    if (localLoggedIn === \"true\") {\n      setIsLoggedIn(true);\n    }\n    // auth.onAuthStateChanged((user) => {\n    //   if (user) {\n    //     setIsLoggedIn(true);\n    //   }\n    // });\n    setIsLoading(false);\n  }, []);\n\n  // dark mode stuff\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  // method to toggle isLoggedIn in state\n  const setLoggedIn = () => {\n    if (!isLoggedIn) {\n      setIsLoggedIn(true);\n      // set local state\n      localStorage.setItem(\"loggedIn\", \"true\");\n    }\n  };\n  // method to set current user id in state\n  const setId = (id) => {\n    setUserId(id);\n  };\n  // method to set current userName in state\n  const setUsername = (username) => {\n    setUserName(username);\n  };\n  //method to logout\n\n  const logout = () => {\n    auth.signOut().then(() => {\n      localStorage.setItem(\"loggedIn\", \"false\");\n      setIsLoggedIn(false);\n      navigate(\"/\");\n    });\n  };\n\n  // console.log(isLoggedIn, '<<isLoggedIn');\n  console.log(theme, \"newTheme\");\n  if (!mountedComponent) return <div />;\n  return (\n    // dark mode styled components wrapper\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        {/* check if isLoading */}\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <div className=\"App\">\n            <div className=\"headerContainer\">\n              <Toggle theme={theme} toggleTheme={themeToggler} />\n              <Header />\n              {/* render logout button only when user logged in */}\n              {isLoggedIn && (\n                <Logout\n                  theme={theme}\n                  toggleTheme={themeToggler}\n                  logout={logout}\n                />\n              )}\n            </div>\n            {/* check if isLoggedIn */}\n            {!isLoggedIn ? (\n              // pass login methods to Login component\n              <Login\n                setId={setId}\n                setLoggedIn={setLoggedIn}\n                setUsername={setUsername}\n                path=\"/\"\n              />\n            ) : (\n              <>\n                <Navbar />\n\n                <Router>\n                  <Main path=\"/main\" theme={theme} />\n                  <UserProfile path=\"/user-profile\" />\n                  <TravelAdvice path=\"/travel-advice\" />\n                  <ErrorMessage msg=\"Page not found\" code=\"404\" default />\n                </Router>\n              </>\n            )}\n          </div>\n        )}\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/FirebaseConfig.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Themes.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Globalstyle.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Logout.js",["96","97","98"],"import React from 'react';\nimport { auth, provider, firebase } from '../FirebaseConfig.js';\nimport styled from 'styled-components';\n\nconst LogoutButton = styled.button`\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.5rem;\n  justify-content: space-between;\n  justify-self: left;\n  overflow: hidden;\n  padding: 0.5rem;\n\n  width: 4rem;\n  height: 3rem;\n  outline: solid green 2px;\n`;\nconst Logout = (props) => {\n  return <LogoutButton onClick={props.logout}>LOGOUT</LogoutButton>;\n};\nexport default Logout;\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Toggler.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Header.js",["99"],"import React from 'react';\nimport Toggle from './Toggler';\n\nconst Header = (props) => {\n  return <h1 className='headerContent'>Header</h1>;\n};\n\nexport default Header;\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Loading.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/UserProfile.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Navbar.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/TravelAdvice.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Login.js",["100","101","102","103"],"import { navigate } from '@reach/router';\nimport { React, useState, useEffect } from 'react';\nimport { auth, provider } from '../FirebaseConfig';\nimport firebase from '../FirebaseConfig.js';\nimport SignInEmail from './SignInEmail';\nimport GoogleLogin from './GoogleLogin';\nimport SignupForm from './SignupForm';\n\nconst Login = (props) => {\n  //state stuff\n  const [showSignup, setShowSignup] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // sign in with email method\n  const signInEmail = (email, password) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        const uid = result.user.uid;\n        const displayName = result.user.displayName;\n        //use methods on props to change state in App.js\n        props.setId(uid);\n        props.setLoggedIn(true);\n        props.setUsername(displayName);\n        navigate('/main');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        setErrorMessage(errorMessage);\n        setLoginError(true);\n      });\n  };\n\n  // google login functionality\n  const googleLogin = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        const uid = result.user.uid;\n        const displayName = result.user.displayName;\n        //use methods on props to change state in App.js\n        props.setId(uid);\n        props.setLoggedIn(true);\n        props.setUsername(displayName);\n        navigate('/main');\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        setErrorMessage(errorMessage);\n        setLoginError(true);\n      });\n  };\n\n  //toggle show signup button\n  const toggleShowSignup = () => {\n    if (showSignup) {\n      setShowSignup(false);\n    } else {\n      setShowSignup(true);\n    }\n  };\n  // sign up login method\n  const handleSignUp = (username, email, password) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        console.log(user);\n        const { uid } = firebase.auth().currentUser;\n        const userInfo = firebase.auth().currentUser;\n        userInfo.updateProfile({\n          displayName: username,\n        });\n        props.setId(uid);\n        props.setLoggedIn(true);\n        props.setUsername(username);\n        navigate('/main');\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        setErrorMessage(errorMessage);\n        setLoginError(true);\n      });\n  };\n\n  return (\n    <div className='loginPage'>\n      <h2 className='loginpageTitle'>LOGIN PAGE</h2>\n\n      {loginError && <div className='loginError'>{errorMessage}</div>}\n\n      <SignInEmail signInEmail={signInEmail} />\n\n      <GoogleLogin googleLogin={googleLogin} />\n\n      <div className='signupButtonContainer'>\n        <button className='toggleSignupButton' onClick={toggleShowSignup}>\n          {showSignup ? 'hide signup' : 'show signup'}\n        </button>\n      </div>\n\n      {showSignup && <SignupForm handleSignUp={handleSignUp} />}\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/ErrorMessage.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/useDarkMode.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Main.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignInEmail.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignupForm.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/GoogleLogin.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Map.js",["104"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/styles/MapNightMode.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":25,"column":16,"nodeType":"111","messageId":"112","endLine":25,"endColumn":24},{"ruleId":"109","severity":1,"message":"113","line":32,"column":10,"nodeType":"111","messageId":"112","endLine":32,"endColumn":16},{"ruleId":"109","severity":1,"message":"114","line":33,"column":10,"nodeType":"111","messageId":"112","endLine":33,"endColumn":18},{"ruleId":"109","severity":1,"message":"115","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":24},{"ruleId":"109","severity":1,"message":"116","line":2,"column":26,"nodeType":"111","messageId":"112","endLine":2,"endColumn":34},{"ruleId":"109","severity":1,"message":"117","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":36},{"ruleId":"109","severity":1,"message":"119","line":31,"column":15,"nodeType":"111","messageId":"112","endLine":31,"endColumn":24},{"ruleId":"109","severity":1,"message":"119","line":53,"column":15,"nodeType":"111","messageId":"112","endLine":53,"endColumn":24},{"ruleId":"109","severity":1,"message":"119","line":86,"column":15,"nodeType":"111","messageId":"112","endLine":86,"endColumn":24},{"ruleId":"109","severity":1,"message":"120","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":16},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'provider' is defined but never used.","Identifier","unusedVar","'userId' is assigned a value but never used.","'userName' is assigned a value but never used.","'auth' is defined but never used.","'firebase' is defined but never used.","'Toggle' is defined but never used.","'useEffect' is defined but never used.","'errorCode' is assigned a value but never used.","'HomeIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]