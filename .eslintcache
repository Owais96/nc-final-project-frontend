[{"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/index.js":"1","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/App.js":"2","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/FirebaseConfig.js":"3","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/useDarkMode.js":"4","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Globalstyle.js":"5","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Themes.js":"6","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Header.js":"7","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Toggler.js":"8","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Logout.js":"9","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Loading.js":"10","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/TravelAdvice.js":"11","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Navbar.js":"12","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/ErrorMessage.js":"13","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Main.js":"14","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Login.js":"15","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/UserProfile.js":"16","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignInEmail.js":"17","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/GoogleLogin.js":"18","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignupForm.js":"19","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/JourneyDetails.js":"20","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Map.js":"21","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/geocodeApi.js":"22","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/WhoYouWith.js":"23","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SelectContact.js":"24","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/FacebookLogin.js":"25","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/backendApi.js":"26","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/CrimeApi.js":"27","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/styles/MapNightMode.js":"28"},{"size":417,"mtime":1610099923836,"results":"29","hashOfConfig":"30"},{"size":5896,"mtime":1610125874250,"results":"31","hashOfConfig":"30"},{"size":1092,"mtime":1610126283131,"results":"32","hashOfConfig":"30"},{"size":657,"mtime":1610099923836,"results":"33","hashOfConfig":"30"},{"size":303,"mtime":1610099923829,"results":"34","hashOfConfig":"30"},{"size":317,"mtime":1610099923832,"results":"35","hashOfConfig":"30"},{"size":164,"mtime":1610099923830,"results":"36","hashOfConfig":"30"},{"size":3131,"mtime":1610099923832,"results":"37","hashOfConfig":"30"},{"size":588,"mtime":1610099923831,"results":"38","hashOfConfig":"30"},{"size":131,"mtime":1610099923830,"results":"39","hashOfConfig":"30"},{"size":157,"mtime":1610099923833,"results":"40","hashOfConfig":"30"},{"size":497,"mtime":1610099923831,"results":"41","hashOfConfig":"30"},{"size":167,"mtime":1610099923829,"results":"42","hashOfConfig":"30"},{"size":3658,"mtime":1610174629969,"results":"43","hashOfConfig":"30"},{"size":5260,"mtime":1610125874253,"results":"44","hashOfConfig":"30"},{"size":7933,"mtime":1610125874257,"results":"45","hashOfConfig":"30"},{"size":1245,"mtime":1610099923832,"results":"46","hashOfConfig":"30"},{"size":297,"mtime":1610099923829,"results":"47","hashOfConfig":"30"},{"size":1702,"mtime":1610099923832,"results":"48","hashOfConfig":"30"},{"size":3801,"mtime":1610174260265,"results":"49","hashOfConfig":"30"},{"size":11379,"mtime":1610125874255,"results":"50","hashOfConfig":"30"},{"size":1104,"mtime":1610125874263,"results":"51","hashOfConfig":"30"},{"size":1655,"mtime":1610174595377,"results":"52","hashOfConfig":"30"},{"size":1304,"mtime":1610174293019,"results":"53","hashOfConfig":"30"},{"size":307,"mtime":1610125874251,"results":"54","hashOfConfig":"30"},{"size":707,"mtime":1610128844762,"results":"55","hashOfConfig":"30"},{"size":711,"mtime":1610110070780,"results":"56","hashOfConfig":"30"},{"size":5111,"mtime":1610099923834,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1yx8qv1",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/index.js",[],["121","122"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/App.js",["123","124","125"],"import { React, useState, useContext, createContext, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { useDarkMode } from './components/useDarkMode'\nimport { GlobalStyles } from './components/Globalstyle'\nimport { lightTheme, darkTheme } from './components/Themes'\nimport Toggle from './components/Toggler'\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport Loading from './components/Loading'\nimport Logout from './components/Logout'\nimport Main from './components/Main'\nimport UserProfile from './components/UserProfile'\nimport TravelAdvice from './components/TravelAdvice'\nimport { Router, navigate } from '@reach/router'\nimport './components/styles/App.css'\nimport './components/styles/mainContent.css'\nimport './components/styles/header.css'\nimport './components/styles/loading.css'\nimport './components/styles/loginPage.css'\nimport './components/styles/travelAdvice.css'\nimport './components/styles/userProfile.css'\nimport './components/styles/navbar.css'\nimport './components/styles/error.css'\nimport './components/styles/signInEmail.css'\nimport './components/styles/messageContent.css'\nimport { auth, provider } from './FirebaseConfig'\nimport firebase from './FirebaseConfig.js'\nimport Navbar from './components/Navbar'\nimport ErrorMessage from './components/ErrorMessage'\n\nfunction App() {\n    // state stuff\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [userId, setUserId] = useState('')\n    const [userName, setUserName] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [isNewUser, setIsNewUser] = useState(null)\n\n    // componentDidMount to check local storage for logged in state\n    useEffect(() => {\n        const localLoggedIn = localStorage.getItem('loggedIn')\n        if (localLoggedIn === 'true') {\n            setIsLoggedIn(true)\n        }\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setUserId(user.uid)\n            }\n        })\n\n        setIsLoading(false)\n    }, [])\n    console.log(userId, 'user ID in app')\n    // dark mode stuff\n    const [theme, themeToggler, mountedComponent] = useDarkMode()\n    const themeMode = theme === 'light' ? lightTheme : darkTheme\n\n    // method to toggle isLoggedIn in state\n    const setLoggedIn = () => {\n        if (!isLoggedIn) {\n            setIsLoggedIn(true)\n            // set local state\n            localStorage.setItem('loggedIn', 'true')\n        }\n    }\n    // method to set current user id in state\n    const setId = (id) => {\n        setUserId(id)\n    }\n    // method to set current userName in state\n    const setUsername = (username) => {\n        setUserName(username)\n    }\n    //method to logout\n\n    const logout = () => {\n        auth.signOut().then(() => {\n            localStorage.setItem('loggedIn', 'false')\n            setIsLoggedIn(false)\n            navigate('/')\n        })\n    }\n\n    // method to check if current user is new to app\n\n    // console.log(isLoggedIn, '<<isLoggedIn');\n    console.log(theme, 'newTheme')\n    console.log(isNewUser, 'isNewuser')\n    if (!mountedComponent) return <div />\n    return (\n        // dark mode styled components wrapper\n        <ThemeProvider theme={themeMode}>\n            <>\n                <GlobalStyles />\n                {/* check if isLoading */}\n                {isLoading ? (\n                    <Loading />\n                ) : (\n                    <div className='App'>\n                        <div className='headerContainer'>\n                            <Toggle theme={theme} toggleTheme={themeToggler} />\n                            <Header />\n                            {/* render logout button only when user logged in */}\n                            {isLoggedIn && (\n                                <Logout\n                                    theme={theme}\n                                    toggleTheme={themeToggler}\n                                    logout={logout}\n                                />\n                            )}\n                        </div>\n                        {/* check if isLoggedIn */}\n                        {!isLoggedIn ? (\n                            // pass login methods to Login component\n                            <Login\n                                setId={setId}\n                                setLoggedIn={setLoggedIn}\n                                setUsername={setUsername}\n                                setIsNewUser={setIsNewUser}\n                                path='/'\n                            />\n                        ) : (\n                            <>\n                                <Navbar />\n\n                                <Router>\n                                    <Main\n                                        path='/main'\n                                        theme={theme}\n                                        userId={userId}\n                                    />\n                                    <UserProfile\n                                        path='/user-profile'\n                                        userId={userId}\n                                        isNewUser={isNewUser}\n                                        setIsNewUser={setIsNewUser}\n                                        userName={userName}\n                                    />\n                                    <TravelAdvice path='/travel-advice' />\n                                    <ErrorMessage\n                                        msg='Page not found'\n                                        code='404'\n                                        default\n                                    />\n                                </Router>\n                            </>\n                        )}\n                    </div>\n                )}\n            </>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/FirebaseConfig.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/useDarkMode.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Globalstyle.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Themes.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Header.js",["126"],"import React from 'react'\nimport Toggle from './Toggler'\n\nconst Header = (props) => {\n    return <h1 className=\"headerContent\">Header</h1>\n}\n\nexport default Header\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Toggler.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Logout.js",["127","128","129"],"import React from 'react'\nimport { auth, provider, firebase } from '../FirebaseConfig.js'\nimport styled from 'styled-components'\n\nconst LogoutButton = styled.button`\n    border: 2px solid ${({ theme }) => theme.toggleBorder};\n    border-radius: 30px;\n    cursor: pointer;\n    font-size: 0.5rem;\n    justify-content: space-between;\n    justify-self: left;\n    overflow: hidden;\n    padding: 0.5rem;\n\n    width: 4rem;\n    height: 3rem;\n    outline: solid green 2px;\n`\nconst Logout = (props) => {\n    return <LogoutButton onClick={props.logout}>LOGOUT</LogoutButton>\n}\nexport default Logout\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Loading.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/TravelAdvice.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Navbar.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/ErrorMessage.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Main.js",["130","131","132","133"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Login.js",["134","135","136","137"],"import { navigate } from '@reach/router'\nimport { React, useState, useEffect } from 'react'\nimport { auth, google, facebook } from '../FirebaseConfig'\nimport firebase from '../FirebaseConfig.js'\nimport SignInEmail from './SignInEmail'\nimport GoogleLogin from './GoogleLogin'\nimport SignupForm from './SignupForm'\nimport FacebookLogin from './FacebookLogin'\n\nconst Login = (props) => {\n    //state stuff\n    const [showSignup, setShowSignup] = useState(false)\n    const [loginError, setLoginError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {}, [])\n    // sign in with email method\n    const signInEmail = (email, password) => {\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                const newUser = result.additionalUserInfo.isNewUser\n                //use methods on props to change state in App.js\n                props.setIsNewUser(newUser)\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    // google login functionality\n    const googleLogin = () => {\n        auth.signInWithPopup(google)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n    // google login functionality\n    const facebookLogin = () => {\n        console.log('clicked')\n        auth.signInWithPopup(facebook)\n            .then((result) => {\n                const newUser = result.additionalUserInfo.isNewUser\n                const uid = result.user.uid\n                const displayName = result.user.displayName\n                console.log(result)\n                //use methods on props to change state in App.js\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(displayName)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    //toggle show signup button\n    const toggleShowSignup = () => {\n        if (showSignup) {\n            setShowSignup(false)\n        } else {\n            setShowSignup(true)\n        }\n    }\n    // sign up login method\n    const handleSignUp = (username, email, password) => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                console.log(user)\n                const { uid } = firebase.auth().currentUser\n                const userInfo = firebase.auth().currentUser\n                const newUser = user.additionalUserInfo.isNewUser\n                userInfo.updateProfile({\n                    displayName: username,\n                })\n                props.setId(uid)\n                props.setLoggedIn(true)\n                props.setUsername(username)\n                props.setIsNewUser(newUser)\n                navigate('/main')\n            })\n            .catch((error) => {\n                const errorCode = error.code\n                const errorMessage = error.message\n                setErrorMessage(errorMessage)\n                setLoginError(true)\n            })\n    }\n\n    return (\n        <div className='loginPage'>\n            <h2 className='loginpageTitle'>LOGIN PAGE</h2>\n\n            {loginError && <div className='loginError'>{errorMessage}</div>}\n\n            <SignInEmail signInEmail={signInEmail} />\n\n            <GoogleLogin googleLogin={googleLogin} />\n\n            <FacebookLogin facebookLogin={facebookLogin} />\n\n            <div className='signupButtonContainer'>\n                <button\n                    className='toggleSignupButton'\n                    onClick={toggleShowSignup}\n                >\n                    {showSignup ? 'hide signup' : 'show signup'}\n                </button>\n            </div>\n\n            {showSignup && <SignupForm handleSignUp={handleSignUp} />}\n        </div>\n    )\n}\n\nexport default Login\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/UserProfile.js",["138","139","140"],"import { React, useState, useEffect, useContext } from 'react'\nimport { getUserByUid, getUsers, postNewUser } from './backendApi'\nimport Loading from './Loading'\n\nfunction UserProfile(props) {\n    // const [firebaseUid, setFirebaseUid] = useState('')\n    // const [users, setUsers] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n    //const [isNewUser, setIsNewUser] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [userName, setUserName] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const [houseNumber, setHouseNumber] = useState('')\n    const [streetName, setStreetName] = useState('')\n    const [postCode, setPostCode] = useState('')\n    const [city, setCity] = useState('')\n    const [userData, setUserData] = useState({})\n\n    // set state\n    useEffect(() => {\n        // setFirebaseUid(props.userId)\n        console.log(props.userId)\n        setIsLoading(false)\n        if (!userData && !props.isNewUser) {\n            console.log(props.userId)\n            getUserByUid(props.userId).then((user) => {\n                setUserData(user)\n            })\n        }\n        // const localUser = localStorage.getItem('localUserData')\n        // if (localUser) {\n        //     setUserData('newUser')\n        // }\n        // setIsNewUser(props.isNewUser)\n    }, [userData])\n\n    // console.log(firebaseUid, 'UID')\n\n    const handleNewUserSubmit = (event) => {\n        console.log('hello')\n        event.preventDefault()\n        const newUser = {\n            first_name: firstName,\n            last_name: lastName,\n            username: userName,\n            phone_number: phoneNumber,\n            house_number: +houseNumber,\n            street_name: streetName,\n            postcode: postCode,\n            city: city,\n            uid: props.userId,\n        }\n        postNewUser(newUser).then((newUser) => {\n            setUserData(newUser)\n            props.setIsNewUser(false)\n        })\n        // localStorage.setItem('localUserData', 'userData')\n    }\n\n    return (\n        <div className='userProfileContent'>\n            {isLoading ? (\n                <Loading />\n            ) : props.isNewUser ? (\n                <>\n                    <h2>New User Profile</h2>\n                    <form\n                        onSubmit={handleNewUserSubmit}\n                        className='newUserForm'\n                    >\n                        <label>\n                            First Name:\n                            <input\n                                name='firstName'\n                                type='text'\n                                placeholder='First Name'\n                                required\n                                value={firstName}\n                                onChange={(event) =>\n                                    setFirstName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Last Name:\n                            <input\n                                name='lastName'\n                                type='text'\n                                placeholder='Last Name'\n                                required\n                                value={lastName}\n                                onChange={(event) =>\n                                    setLastName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Username:\n                            <input\n                                placeholder='Username'\n                                required\n                                value={userName}\n                                onChange={(event) =>\n                                    setUserName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Phone Number:\n                            <input\n                                name='phoneNumber'\n                                type='text'\n                                placeholder='Phone Number'\n                                required\n                                value={phoneNumber}\n                                onChange={(event) =>\n                                    setPhoneNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            House Number:\n                            <input\n                                name='houseNumber'\n                                type='number'\n                                placeholder='House Number'\n                                required\n                                value={houseNumber}\n                                onChange={(event) =>\n                                    setHouseNumber(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Street Name:\n                            <input\n                                name='streetName'\n                                type='text'\n                                placeholder='Street Name'\n                                required\n                                value={streetName}\n                                onChange={(event) =>\n                                    setStreetName(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            Post Code:\n                            <input\n                                name='postCode'\n                                type='text'\n                                placeholder='Post Code'\n                                required\n                                value={postCode}\n                                onChange={(event) =>\n                                    setPostCode(event.target.value)\n                                }\n                            />\n                        </label>\n                        <label>\n                            City:\n                            <input\n                                name='city'\n                                type='text'\n                                placeholder='City'\n                                required\n                                value={city}\n                                onChange={(event) =>\n                                    setCity(event.target.value)\n                                }\n                            />\n                        </label>\n                        <button type='submit'>Create Account</button>\n                    </form>\n                </>\n            ) : (\n                <>\n                    <h2>User Profile</h2>\n                    {!userData ? (\n                        <Loading />\n                    ) : (\n                        <div>\n                            <p>First Name: {userData.user.first_name}</p>\n                            <p>Last Name: {userData.user.last_name}</p>\n                            <p>User Name: {userData.user.username}</p>\n                            <p>Phone Number: {userData.user.phone_number}</p>\n                            <p>House Number: {userData.user.house_number}</p>\n                            <p>Street Name: {userData.user.street_name}</p>\n                            <p>Post Code: {userData.user.postcode}</p>\n                            <p>City: {userData.user.city}</p>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default UserProfile\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignInEmail.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/GoogleLogin.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SignupForm.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/JourneyDetails.js",["141","142"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/Map.js",["143","144","145","146"],"import {\n    GoogleMap,\n    Marker,\n    DirectionsRenderer,\n    DirectionsService,\n    HeatmapLayer,\n    DistanceMatrixService,\n} from '@react-google-maps/api'\nimport { useRef, useEffect, useState } from 'react'\nimport { modeNightStyle, modeDayStyle } from './styles/MapNightMode'\nimport Loading from './Loading'\nimport { getCrimesByLocation } from '../CrimeApi'\nimport { getOriginCoord } from '../geocodeApi'\n\nimport axios from 'axios'\nimport JourneyDetails from './JourneyDetails'\n\nconst Map = (props) => {\n    const [origin, setOrigin] = useState('')\n    const [destination, setDestination] = useState('')\n    const [response, setResponse] = useState(null)\n    const [centre, setCentre] = useState({})\n    const [isLoading, setLoading] = useState(true)\n    const [hasError, setError] = useState(false)\n    const [messageError, setMessage] = useState('')\n    const [duration, setDuration] = useState('')\n    const [distance, setDistance] = useState('')\n    const [route, setRoute] = useState(false)\n    const [crimeData, setData] = useState([])\n    const [showHeatMap, setShow] = useState(false)\n    const [isRouted, setIsRouted] = useState(false)\n\n    // in order to have control over the origin and destination of the inputs, it is necessary to use them as references\n    const getOrigin = useRef('')\n    const getDestination = useRef('')\n\n    // asking permission to navigator to set location\n    useEffect(() => {\n        navigator.permissions.query({ name: 'geolocation' }).then((result) => {\n            if (result.state === 'granted') {\n                setLocation()\n            } else {\n                setError(true)\n                setMessage('Your browser needs access to your location')\n            }\n        })\n    }, [])\n\n    // set centre and origin with current position\n    const setLocation = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setCentre({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n            })\n            setOrigin({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n            })\n            setLoading(false)\n        })\n    }\n\n    // when click the button to create the route, set the origin as the current position if there is nothing in the input, set the destination with the input value\n    const onClick = () => {\n        if (getOrigin.current.value === '') {\n            setOrigin(centre)\n            setRoute(false)\n        } else {\n            setOrigin(getOrigin.current.value)\n            setRoute(false)\n        }\n        setDestination(getDestination.current.value)\n    }\n\n    // callback function to send a request to the api of google to get the response to render the route\n    const directionsCallback = (response) => {\n        if (response !== null) {\n            if (response.status === 'OK') {\n                setResponse(response)\n            } else {\n                console.log(response, 'response')\n            }\n        }\n    }\n\n    // callback function to send a request to the api of google to get the duration and the distance of route\n    const callbackDistanceService = (response, status) => {\n        if (status === 'OK' && response) {\n            setDuration(response.rows[0].elements[0].duration.text)\n            setDistance(response.rows[0].elements[0].distance.text)\n            setRoute(true)\n            props.saveDetails(origin, destination, duration, distance, centre)\n        }\n    }\n\n    const onClickHeatMap = () => {\n        if (typeof origin === 'string') {\n            getOriginCoord(origin).then((response) => {\n                getCrimesByLocation(response.lat, response.lng).then(\n                    (response) => {\n                        const dataCrime = []\n                        if (response) {\n                            response.forEach((crimeArray) => {\n                                let max = 40\n                                if (crimeArray.length !== 0) {\n                                    if (crimeArray.length < max) {\n                                        crimeArray.forEach((element) => {\n                                            dataCrime.push(element)\n                                        })\n                                    } else {\n                                        for (let i = 0; i <= max; i++) {\n                                            dataCrime.push(crimeArray[i])\n                                        }\n                                    }\n                                }\n                            })\n                        }\n                        setData(dataCrime)\n                    }\n                )\n            })\n        } else {\n            getCrimesByLocation(origin.lat, origin.lng).then((response) => {\n                const dataCrime = []\n                if (response) {\n                    response.forEach((crimeArray) => {\n                        let max = 40\n                        if (crimeArray.length !== 0) {\n                            if (crimeArray.length < max) {\n                                crimeArray.forEach((element) => {\n                                    dataCrime.push(element)\n                                })\n                            } else {\n                                for (let i = 0; i <= max; i++) {\n                                    dataCrime.push(crimeArray[i])\n                                }\n                            }\n                        }\n                    })\n                }\n                setData(dataCrime)\n            })\n        }\n        if (showHeatMap === true) {\n            setShow(false)\n        } else {\n            setShow(true)\n        }\n    }\n\n    return (\n        // the names of these classes are predetermined by the google api, they do not appear in any css file created by us\n        <div className='map'>\n            {/* display the message */}\n            {hasError && <p>{messageError}</p>}\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <div className='map-container'>\n                    {/* component */}\n                    <GoogleMap\n                        id='direction-example'\n                        mapContainerStyle={{\n                            height: '150px',\n                            width: '100%',\n                        }}\n                        zoom={13}\n                        center={centre}\n                        options={\n                            props.theme === 'light'\n                                ? { styles: modeDayStyle }\n                                : { styles: modeNightStyle }\n                        }\n                    >\n                        {/* the original marker with the centre in the current position*/}\n                        <Marker position={centre} />\n\n                        {/* if origin and destination are added, send the request to get the route */}\n                        {destination !== '' && origin !== '' && (\n                            <DirectionsService\n                                options={{\n                                    destination,\n                                    origin,\n                                    travelMode: 'WALKING',\n                                }}\n                                callback={directionsCallback}\n                            />\n                        )}\n                        {/* once get the response to the request, render the route in the map*/}\n                        {response !== null && (\n                            <DirectionsRenderer\n                                options={{ directions: response }}\n                            />\n                        )}\n\n                        {/* render de heatmapping in the map, the coordinates have to be changed with the coordinates from the police api */}\n                        {showHeatMap && (\n                            <HeatmapLayer\n                                data={crimeData.map((location) => {\n                                    return new window.google.maps.LatLng(\n                                        location.lat,\n                                        location.lng\n                                    )\n                                })}\n                            />\n                        )}\n\n                        {/* once the destination is defined and the request is not sended yet to the api, send the request */}\n                        {destination !== '' && !route && (\n                            <DistanceMatrixService\n                                options={{\n                                    destinations: [destination],\n                                    origins: [origin],\n                                    travelMode: 'WALKING',\n                                }}\n                                callback={callbackDistanceService}\n                            />\n                        )}\n                    </GoogleMap>\n                </div>\n            )}\n            {/* form to add the origin and the destination and the button to render the route */}\n            <div className='map-settings'>\n                <hr className='mt-0 mb-3' />\n\n                <div className='row'>\n                    <div className='col-md-6 col-lg-4'>\n                        <div className='form-group'>\n                            <label htmlFor='ORIGIN'>Origin</label>\n                            <br />\n                            <input\n                                id='ORIGIN'\n                                className='form-control'\n                                type='text'\n                                ref={getOrigin}\n                                placeholder='current location'\n                            />\n                        </div>\n                    </div>\n\n                    <div className='col-md-6 col-lg-4'>\n                        <div className='form-group'>\n                            <label htmlFor='DESTINATION'>Destination</label>\n                            <br />\n                            <input\n                                id='DESTINATION'\n                                className='form-control'\n                                type='text'\n                                ref={getDestination}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {/* button to create the route */}\n                <button\n                    className='btn btn-primary'\n                    type='button'\n                    onClick={onClick}\n                >\n                    Build Route\n                </button>\n\n                {/* when we have the response from the request to the api and we get the duration and the distance, display in a paragraph */}\n                {route && (\n                    <p>\n                        Duration: {duration}, Distance: {distance}\n                    </p>\n                )}\n                {/* button to display crime markers */}\n                <button\n                    className='btn btn-primary'\n                    type='button'\n                    onClick={onClickHeatMap}\n                >\n                    {showHeatMap ? 'Hide Hot Spots' : 'Show Hot Spots'}\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Map\n","/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/geocodeApi.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/WhoYouWith.js",["147"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/SelectContact.js",["148"],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/FacebookLogin.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/backendApi.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/CrimeApi.js",[],"/Users/albamateos/northcoders/project/final-project/nc-final-project-frontend/src/components/styles/MapNightMode.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":37},{"ruleId":"153","severity":1,"message":"157","line":1,"column":39,"nodeType":"155","messageId":"156","endLine":1,"endColumn":52},{"ruleId":"153","severity":1,"message":"158","line":26,"column":16,"nodeType":"155","messageId":"156","endLine":26,"endColumn":24},{"ruleId":"153","severity":1,"message":"159","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"153","severity":1,"message":"160","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"153","severity":1,"message":"158","line":2,"column":16,"nodeType":"155","messageId":"156","endLine":2,"endColumn":24},{"ruleId":"153","severity":1,"message":"161","line":2,"column":26,"nodeType":"155","messageId":"156","endLine":2,"endColumn":34},{"ruleId":"153","severity":1,"message":"162","line":13,"column":12,"nodeType":"155","messageId":"156","endLine":13,"endColumn":26},{"ruleId":"153","severity":1,"message":"163","line":14,"column":12,"nodeType":"155","messageId":"156","endLine":14,"endColumn":18},{"ruleId":"153","severity":1,"message":"164","line":25,"column":12,"nodeType":"155","messageId":"156","endLine":25,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":35,"column":8,"nodeType":"167","endLine":35,"endColumn":10,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":35,"column":23,"nodeType":"155","messageId":"156","endLine":35,"endColumn":32},{"ruleId":"153","severity":1,"message":"169","line":58,"column":23,"nodeType":"155","messageId":"156","endLine":58,"endColumn":32},{"ruleId":"153","severity":1,"message":"169","line":82,"column":23,"nodeType":"155","messageId":"156","endLine":82,"endColumn":32},{"ruleId":"153","severity":1,"message":"169","line":117,"column":23,"nodeType":"155","messageId":"156","endLine":117,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":1,"column":38,"nodeType":"155","messageId":"156","endLine":1,"endColumn":48},{"ruleId":"153","severity":1,"message":"170","line":2,"column":24,"nodeType":"155","messageId":"156","endLine":2,"endColumn":32},{"ruleId":"165","severity":1,"message":"171","line":36,"column":8,"nodeType":"167","endLine":36,"endColumn":18,"suggestions":"172"},{"ruleId":"153","severity":1,"message":"173","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"153","severity":1,"message":"174","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"175","line":15,"column":8,"nodeType":"155","messageId":"156","endLine":15,"endColumn":13},{"ruleId":"153","severity":1,"message":"176","line":16,"column":8,"nodeType":"155","messageId":"156","endLine":16,"endColumn":22},{"ruleId":"153","severity":1,"message":"177","line":31,"column":12,"nodeType":"155","messageId":"156","endLine":31,"endColumn":20},{"ruleId":"153","severity":1,"message":"178","line":31,"column":22,"nodeType":"155","messageId":"156","endLine":31,"endColumn":33},{"ruleId":"153","severity":1,"message":"173","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"179","line":13,"column":8,"nodeType":"167","endLine":13,"endColumn":10,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'provider' is defined but never used.","'Toggle' is defined but never used.","'auth' is defined but never used.","'firebase' is defined but never used.","'journeyDetails' is assigned a value but never used.","'userId' is assigned a value but never used.","'selectedContact' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userId'. Either include it or remove the dependency array. If 'setUserId' needs the current value of 'props.userId', you can also switch to useReducer instead of useState and read 'props.userId' in the reducer.","ArrayExpression",["183"],"'errorCode' is assigned a value but never used.","'getUsers' is defined but never used.","React Hook useEffect has missing dependencies: 'props.isNewUser' and 'props.userId'. Either include them or remove the dependency array.",["184"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'JourneyDetails' is defined but never used.","'isRouted' is assigned a value but never used.","'setIsRouted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiCalled'. Either include it or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [props.userId]",{"range":"192","text":"193"},"Update the dependencies array to be: [props.isNewUser, props.userId, userData]",{"range":"194","text":"195"},"Update the dependencies array to be: [apiCalled]",{"range":"196","text":"197"},[1334,1336],"[props.userId]",[1391,1401],"[props.isNewUser, props.userId, userData]",[366,368],"[apiCalled]"]